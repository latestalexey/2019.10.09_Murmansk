
#Область ОписаниеПеременных

Перем КопияНастроек;

#КонецОбласти 

#Область ОбработчикиСобытийФормы

Процедура ПриОткрытии()
		
	ИмяКолонкиЗначение = "ЗначениеСоставногоТипа";
	
	ЭтаФорма.Настройки.Колонки.Вставить(2, ИмяКолонкиЗначение);							
	КолонкаЗначение = ЭлементыФормы.Настройки.Колонки.Вставить(2, ИмяКолонкиЗначение);	
	КолонкаЗначение.Имя		= ИмяКолонкиЗначение;
	КолонкаЗначение.Данные 	= ИмяКолонкиЗначение;
	КолонкаЗначение.Видимость = Ложь;		
	
	КатегорииНастроекMS = _ЛокКонтекст.КатегорииНастроекMS;
	
	НастройкиТаблиц 		= КатегорииНастроекMS.СериализуемыеНастройки;
	НастройкиПодключения 	= КатегорииНастроекMS.НастройкиПодключения;
	НастройкиНоменклатуры 	= КатегорииНастроекMS.НастройкиНоменклатуры;
	НастройкиСправочников 	= КатегорииНастроекMS.НастройкиСправочников;
		
	ПрефиксНастройкиПодключения		= "Подключение";	
	ПрефиксНастройкиСправочников 	= "Справочники";			
	ПрефиксНастройкиНоменклатуры 	= "Номенклатура";		
	ПрефиксНастройкиБП 				= "БизнесПроцессы";
	ПрефиксНастройкиТаблиц 			= "Таблица";
	ПрефиксПрочее					= "Прочее";
	
	Для каждого СтрокаНастройки Из _ЛокКонтекст.ТекущиеНастройкиMS Цикл
						
		Если ВРег(СокрЛП(СтрокаНастройки.Ключ)) = ВРег(СокрЛП("НастройкиБизнесПроцессов")) Тогда									
			
			Для каждого СтрокаБП Из СтрокаНастройки.Значение Цикл
			
				НоваяСтрока 						= Настройки.Добавить();	
				НоваяСтрока.Наименование			= СтрокаБП.Название;
				НоваяСтрока.ПолноеНаименование 		= ПрефиксНастройкиБП + "." + СтрокаБП.Название;
				НоваяСтрока.ЗначениеСоставногоТипа 	= СтрокаБП;
				НоваяСтрока.ТипЗначения				= СокрЛП(ТипЗнч(СтрокаБП));				
				
				Если ЗначениеЗаполнено(НоваяСтрока.ЗначениеСоставногоТипа) Тогда
					Если НоваяСтрока.ЗначениеСоставногоТипа <> Ложь Тогда
						НоваяСтрока.ТекущееЗначение = "Настроено";
					Иначе
						НоваяСтрока.ТекущееЗначение = "Настроить";
					КонецЕсли;				
				КонецЕсли;					
				
				ДобавитьСтрокуВТаблицуЗначений(Настройки, СтрокаБП, ПрефиксНастройкиБП + "." + СтрокаБП.Название);								
				
			КонецЦикла; 
			
		Иначе
			
			НоваяСтрока = Настройки.Добавить();
			
			Если НастройкиПодключения.Найти(СтрокаНастройки.Ключ) <> Неопределено Тогда	
				
				ПрефиксНаименования = ПрефиксНастройкиПодключения;				
				
			ИначеЕсли НастройкиСправочников.Найти(СтрокаНастройки.Ключ) <> Неопределено Тогда	
				
				ПрефиксНаименования = ПрефиксНастройкиСправочников;
				
			ИначеЕсли НастройкиНоменклатуры.Найти(СтрокаНастройки.Ключ) <> Неопределено Тогда	
				
				ПрефиксНаименования = ПрефиксНастройкиНоменклатуры;
				
			ИначеЕсли НастройкиТаблиц.Найти(СтрокаНастройки.Ключ) <> Неопределено Тогда	
				
				ПрефиксНаименования = ПрефиксНастройкиТаблиц;
				
			Иначе
				
				ПрефиксНаименования = ПрефиксПрочее;
				
			КонецЕсли;			
			
			Если НастройкиПодключения.Найти(СтрокаНастройки.Ключ) <> Неопределено Тогда	
								
				НоваяСтрока.ТолькоЧтение = Истина;
				
			КонецЕсли;					
				
			Если НастройкиТаблиц.Найти(СтрокаНастройки.Ключ) <> Неопределено Тогда	
								
				НоваяСтрока.ЗначениеСоставногоТипа = СтрокаНастройки.Значение;							
				
				Если ТипЗнч(НоваяСтрока.ЗначениеСоставногоТипа) = Тип("ТаблицаЗначений") Тогда				
					
					Для каждого ВложеннаяСтрока Из НоваяСтрока.ЗначениеСоставногоТипа Цикл
						
						ДобавитьСтрокуВТаблицуЗначений(Настройки, ВложеннаяСтрока, ПрефиксНаименования, СтрокаНастройки.Ключ);
						
					КонецЦикла; 							
					
				КонецЕсли;	
								
			КонецЕсли;	
			
			НоваяСтрока.Наименование 		= СтрокаНастройки.Ключ;
			НоваяСтрока.ПолноеНаименование 	= ПрефиксНаименования + "." + СтрокаНастройки.Ключ;
			НоваяСтрока.ТекущееЗначение 	= СтрокаНастройки.Значение;						
			НоваяСтрока.ТипЗначения			= СокрЛП(ТипЗнч(СтрокаНастройки.Значение));				
		
		КонецЕсли;
		
		Если ЗначениеЗаполнено(НоваяСтрока.ЗначениеСоставногоТипа) Тогда
			Если НоваяСтрока.ЗначениеСоставногоТипа <> Ложь Тогда
				НоваяСтрока.ТекущееЗначение = "Настроено";
			Иначе
				НоваяСтрока.ТекущееЗначение = "Настроить";
			КонецЕсли;				
		КонецЕсли;	
				
	КонецЦикла; 								
	
	КопияНастроек = Настройки.Скопировать();
	
	ПоказатьВсеПоля 		= Истина;
	СкрытьПустыеЗначения 	= Ложь;
	
	НаложитьОтборНаТаблицуНастроек(Поиск);		
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийОсновныеДействияФормы

Процедура КнопкаСохранитьНажатие(Кнопка)
	
	//ИзмененныеНастройки = Настройки.НайтиСтроки(Новый Структура("Модифицированность", Истина)); 
	//
	//Если НЕ ИзмененныеНастройки.Количество() Тогда
	//	Возврат;
	//КонецЕсли;	
	//
	//СтруктураНастроек = Новый Структура;
	//
	//Для каждого Настройка Из ИзмененныеНастройки Цикл
	//							
	//	СтруктураНастроек.Вставить(Настройка.Наименование, Настройка.ТекущееЗначение);
	//	
	//КонецЦикла; 
	//
	//_ЛокКонтекст.ЛокЯдро_СохранитьНастройкиВБазеSMARTS(СтруктураНастроек);
	//_ЛокКонтекст.ЛокЯдро_ЗаписатьВКэшНастройкиSMARTS(СтруктураНастроек);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

Процедура ПоискАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	НаложитьОтборНаТаблицуНастроек(Текст); 	
	
КонецПроцедуры

Процедура ПоискОчистка(Элемент, СтандартнаяОбработка)
	
	НаложитьОтборНаТаблицуНастроек();
	
КонецПроцедуры

Процедура ПоказатьВсеПоляПриИзменении(Элемент)
	
	НаложитьОтборНаТаблицуНастроек(Поиск);
	
КонецПроцедуры

Процедура СкрытьПустыеЗначенияПриИзменении(Элемент)
	
	НаложитьОтборНаТаблицуНастроек(Поиск);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытияТабличногоПоля_Настройки

Процедура НастройкиВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)		
	
	Если ЗначениеЗаполнено(ВыбраннаяСтрока.ЗначениеСоставногоТипа) Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если ТипЗнч(ВыбраннаяСтрока.ЗначениеСоставногоТипа) = Тип("СтрокаТаблицыЗначений") Тогда
			Значение = ВыбраннаяСтрока.ЗначениеСоставногоТипа.Владелец();
		Иначе	
			Значение = ВыбраннаяСтрока.ЗначениеСоставногоТипа;
		КонецЕсли; 
		
		ОткрытьЗначение(Значение);		
		
	КонецЕсли;	
			
КонецПроцедуры

Процедура НастройкиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
			
	Для каждого Ячейка Из ОформлениеСтроки.Ячейки Цикл				
		Если ДанныеСтроки.ТолькоЧтение Тогда				
			Ячейка.ТолькоПросмотр = Истина;					
		КонецЕсли; 									
	КонецЦикла;	
	
	Если ДанныеСтроки.Модифицированность Тогда
		ОформлениеСтроки.ЦветФона 	= WebЦвета.Золотой;
		ОформлениеСтроки.Шрифт 		= Новый Шрифт(ОформлениеСтроки.Шрифт,,,Истина); // жирный
	КонецЕсли;
	
	Если ДанныеСтроки.ТекущееЗначение = "Настроено" ИЛИ ДанныеСтроки.ТекущееЗначение = "Настроить" Тогда
		
		ОформлениеСтроки.Ячейки.ТекущееЗначение.Гиперссылка = Истина;
		
		Если ДанныеСтроки.ТекущееЗначение = "Настроено" Тогда
			ОформлениеСтроки.Ячейки.ТекущееЗначение.ЦветТекста = WebЦвета.Зеленый;
		Иначе	
			ОформлениеСтроки.Ячейки.ТекущееЗначение.ЦветТекста = WebЦвета.Красный;
		КонецЕсли;  			
				
	КонецЕсли;
	
КонецПроцедуры

Процедура НастройкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель)
	
	Отказ = Истина;
	
КонецПроцедуры

Процедура НастройкиПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

Процедура НастройкиТекущееЗначениеПриИзменении(Элемент)
	
	ЭлементыФормы.Настройки.ТекущиеДанные.Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьСтрокуВТаблицуЗначений(ТаблицаЗначений, Строка, ПрефиксКатегорииНастроек, ПрефиксНастройки = "", ИмяКолонкиВладельца = "")
	
	Для каждого Колонка Из Строка.Владелец().Колонки Цикл
			
		Если ТипЗнч(Строка[Колонка.Имя]) = Тип("ТаблицаЗначений") Тогда
			
			Для каждого ВложеннаяСтрока Из Строка[Колонка.Имя] Цикл
				
				Если 	ВРег(СокрЛП(Колонка.Имя)) = ВРег(СокрЛП("НастройкаВыгрузкиПолей"))
					ИЛИ ВРег(СокрЛП(Колонка.Имя)) = ВРег(СокрЛП("НастройкаЗагрузкиПолей")) Тогда
					
					ИмяКолонки = Колонка.Имя + "." + ВложеннаяСтрока.ИмяПриемника;
					
				ИначеЕсли 	ВРег(СокрЛП(Колонка.Имя)) = ВРег(СокрЛП("НастройкаВыгрузкиТЧ"))
						ИЛИ ВРег(СокрЛП(Колонка.Имя)) = ВРег(СокрЛП("НастройкаЗагрузкиТЧ")) Тогда	
					
					ИмяКолонки = Колонка.Имя + "." + ВложеннаяСтрока.НастройкаТЧСтрокой;
					
				ИначеЕсли ВРег(СокрЛП(Колонка.Имя)) = ВРег(СокрЛП("ТабличнаяЧастьДокумента1С")) Тогда
					
					ИмяКолонки = ИмяКолонкиВладельца + "." + Колонка.Имя + "." + Строка.НастройкаТЧСтрокой + "." + ВложеннаяСтрока.ИмяПриемника;
					
				Иначе										
					
					ИмяКолонки = Колонка.Имя;
					
				КонецЕсли;  					
				
				ДобавитьСтрокуВТаблицуЗначений(ТаблицаЗначений, ВложеннаяСтрока, ПрефиксКатегорииНастроек, ИмяКолонки, Колонка.Имя);
				
			КонецЦикла; 			
			
		Иначе			
			
			НоваяСтрока 					= ТаблицаЗначений.Добавить();
			НоваяСтрока.Наименование 		= Колонка.Имя;
			НоваяСтрока.ПолноеНаименование 	= ПрефиксКатегорииНастроек + "." + ?(ЗначениеЗаполнено(ПрефиксНастройки), ПрефиксНастройки + ".", "") + Колонка.Имя;		
			НоваяСтрока.ТекущееЗначение 	= Строка[Колонка.Имя];
			НоваяСтрока.ТипЗначения			= СокрЛП(ТипЗнч(Строка[Колонка.Имя]));				
			НоваяСтрока.ТолькоЧтение		= Истина;				
			
		КонецЕсли;	
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура НаложитьОтборНаТаблицуНастроек(ПодстрокаПоиска = "")

	Настройки.Очистить();
			
	Для каждого СтрокаНастройки Из КопияНастроек Цикл
		
		Если (ПоказатьВсеПоля ИЛИ НЕ ПоказатьВсеПоля И СтрокаНастройки.Основная)
			И (НЕ СкрытьПустыеЗначения ИЛИ СкрытьПустыеЗначения И ЗначениеЗаполнено(СтрокаНастройки.ТекущееЗначение)) Тогда
			
			Если НЕ ЗначениеЗаполнено(ПодстрокаПоиска) Тогда		
				ЗаполнитьЗначенияСвойств(Настройки.Добавить(), СтрокаНастройки);
			ИначеЕсли Найти(ВРег(СокрЛП(СтрокаНастройки.ПолноеНаименование)), ВРег(СокрЛП(ПодстрокаПоиска))) ИЛИ Найти(ВРег(СокрЛП(СтрокаНастройки.ТекущееЗначение)), ВРег(СокрЛП(ПодстрокаПоиска))) Тогда					
				ЗаполнитьЗначенияСвойств(Настройки.Добавить(), СтрокаНастройки);
			КонецЕсли;		
			
		КонецЕсли;		
		
	КонецЦикла;

КонецПроцедуры
 
#КонецОбласти 
