Перем РезультатРедактирования;
Перем ТекущееСоответствиеТаблицПравилОбмена;

#Область ОбработчикиСобытийФормы

Процедура ПриОткрытии()
	
	Если ЭтоНовыйБизнесПроцесс Тогда
		ID_БизнесПроцесса = _ЛокКонтекст.ЛокЯдро_ПолучитьНовыйID("BP");
		Название = "НОВЫЙ БИЗНЕС-ПРОЦЕСС";
		ЕстьИзмененияНаФорме = Истина;
	КонецЕсли;
	
	Для Каждого ДанныеДокумента Из _ЛокКонтекст.СтруктураМетаданных.Документы1С Цикл
		СписокТиповДокументов1С.Добавить(ДанныеДокумента.Ключ, ДанныеДокумента.Значение.Синоним);
	КонецЦикла;
	СписокТиповДокументов1С.СортироватьПоПредставлению();
	
	Для Каждого ДанныеДокумента Из _ЛокКонтекст.СтруктураМетаданных.ДокументыMS Цикл
		СписокТиповДокументовMS.Добавить(ДанныеДокумента.Ключ, ДанныеДокумента.Значение.Синоним);
	КонецЦикла;
	СписокТиповДокументовMS.СортироватьПоПредставлению();	
	
	ЭлементыФормы.ТипИсходногоДокумента1С.СписокВыбора       = СписокТиповДокументов1С;
	ЭлементыФормы.ТипРезультирующегоДокумента1С.СписокВыбора = СписокТиповДокументов1С;
	ЭлементыФормы.ТипДокументаMS.СписокВыбора                = СписокТиповДокументовMS;	
	
	ЭлементыФормы.ТипИсходногоДокумента1С.Значение = ТипИсходногоДокумента1С;
	ЭлементыФормы.ТипДокументаMS.Значение = ТипДокументаMS;
	ЭлементыФормы.ТипРезультирующегоДокумента1С.Значение = ТипРезультирующегоДокумента1С;	
	
	ЭлементыФормы.Используется.Заголовок = ?(Используется, "Включено", "Отключено");
	ЭлементыФормы.НадписьТипБизнесПроцесса.Заголовок = ?(ЭтоТиповойБизнесПроцесс, "Типовой", "Пользовательский");
	
	РезультатРедактирования = "";
	
	ТекущееСоответствиеТаблицПравилОбмена = Новый Структура;
	ТекущееСоответствиеТаблицПравилОбмена.Вставить("Выгрузка1С", ТипИсходногоДокумента1С); 
	ТекущееСоответствиеТаблицПравилОбмена.Вставить("Загрузка1С", ТипРезультирующегоДокумента1С); 
	ТекущееСоответствиеТаблицПравилОбмена.Вставить("ЗагрузкаВыгрузкаMS", ТипДокументаMS); 
	
	ОбновитьВсеДанныеЭлементовФормы();
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗакрытьФормуСРезультатом();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

#Область ОбработчикиСобытийЭлементовФормы_ОсновныеДействия

Процедура ОсновныеДействияСохранитьИЗакрыть(Кнопка)
	СохранитьНастройку();
	Закрыть();
КонецПроцедуры

Процедура ОсновныеДействияСохранить(Кнопка)
	СохранитьНастройку();
КонецПроцедуры

Процедура ОсновныеДействияЗакрыть(Кнопка)
	Закрыть();
КонецПроцедуры

#КонецОбласти

Процедура НазваниеПриИзменении(Элемент)
	ЕстьИзмененияНаФорме = Истина;
КонецПроцедуры

Процедура ИспользуетсяПриИзменении(Элемент)
	ЕстьИзмененияНаФорме = Истина;
	УстановитьЦветаЭлементов();
	Элемент.Заголовок = ?(Элемент.Значение, "Включено", "Отключено");
КонецПроцедуры

Процедура ТипИсходногоДокумента1СПриИзменении(Элемент)
	
	ЕстьИзмененияНаФорме = Истина;	
	
	ОбновитьВсеДанныеЭлементовФормы();
	
КонецПроцедуры

Процедура ТипИсходногоДокумента1СОчистка(Элемент, СтандартнаяОбработка)
	
	ЕстьИзмененияНаФорме = Истина;	
	
	УстановитьЗначенияРеквизитов();
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

Процедура ТипДокументаMSПриИзменении(Элемент)
	
	ЕстьИзмененияНаФорме = Истина;
	УстановитьЗначенияРеквизитов();
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

Процедура ТипРезультирующегоДокумента1СПриИзменении(Элемент)
	
	ЕстьИзмененияНаФорме = Истина;
	УстановитьЗначенияРеквизитов();
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

Процедура ЗагружатьВТотЖеПриИзменении(Элемент)
	УстановитьЦветаЭлементов();
	УстановитьЗначенияРеквизитов();
	УстановитьДоступностьЭлементов();
КонецПроцедуры

Процедура НастроитьРеквизитыШапкиВыгрузкаНажатие(Элемент)
	
	ОчиститьТаблицыПравилОбмена();
	
	ФормаРедактирования = ПолучитьФорму("ФормаНастройки_ПравилаВыгрузкиПолей", ЭтаФорма, ЭтаФорма);
	ФормаРедактирования._ЛокКонтекст                    = _ЛокКонтекст;
	ФормаРедактирования.КлючНастройки                   = "Выгрузка_ШапкаДокумента";
	ФормаРедактирования.ТипДокумента1С                  = ТипИсходногоДокумента1С;
	ФормаРедактирования.ТипДокументаMS                  = ТипДокументаMS;
	ФормаРедактирования.ТаблицаРеквизитовИсходная       = НастройкаВыгрузкиПолей.Скопировать();
	
	РезультатРедактирования = ФормаРедактирования.ОткрытьМодально();
	
	Если РезультатРедактирования <> Неопределено Тогда
		НастройкаВыгрузкиПолей = РезультатРедактирования.ТаблицаНастроек;
		ТекущееСоответствиеТаблицПравилОбмена.Вставить("Выгрузка1С", ТипИсходногоДокумента1С);
		ТекущееСоответствиеТаблицПравилОбмена.Вставить("ЗагрузкаВыгрузкаMS", ТипДокументаMS);
		ЕстьИзмененияНаФорме = Истина;
		УстановитьЦветаЭлементов();
	КонецЕсли;
	
КонецПроцедуры

Процедура НастроитьРеквизитыТабличнойЧастиВыгрузкаНажатие(Элемент)
	
	ОчиститьТаблицыПравилОбмена();
	
	ФормаРедактирования = ПолучитьФорму("ФормаНастройки_ПравилаВыгрузкиТЧ", ЭтаФорма, ЭтаФорма);
	ФормаРедактирования._ЛокКонтекст = _ЛокКонтекст;
    	ФормаРедактирования.Заголовок = "Клеверенс: Редактирование сопоставления реквизитов таблиц документа";
	ФормаРедактирования.СтруктураДокумента1С = _ЛокКонтекст.СтруктураМетаданных.Документы1С[ТипИсходногоДокумента1С];
	ФормаРедактирования.СтруктураДокументаMS = _ЛокКонтекст.СтруктураМетаданных.ДокументыMS[ТипДокументаMS];
	ФормаРедактирования.ТабличныеЧасти.Колонки.Добавить("ТабличнаяЧастьДокумента1С", Новый ОписаниеТипов("ТаблицаЗначений"));				
		
	ФормаРедактирования.ТипДокумента1С            		= ТипИсходногоДокумента1С;
	ФормаРедактирования.ТипДокументаMS            		= ТипДокументаMS;
	ФормаРедактирования.ТаблицаРеквизитовДополнительная = НастройкаВыгрузкиПолей.Скопировать();	
	
	Для Каждого СтрокаНастройки Из НастройкаВыгрузкиТЧ Цикл
		СтрокаПриемник = ФормаРедактирования.ТабличныеЧасти.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПриемник, СтрокаНастройки);
		СтрокаПриемник.ТабличнаяЧастьДокумента1С = СтрокаНастройки.ТабличнаяЧастьДокумента1С;
	КонецЦикла;
	
	Для Каждого Строка Из СвязиТабличныхЧастей Цикл
		ЗаполнитьЗначенияСвойств(ФормаРедактирования.СвязиТабличныхЧастей.Добавить(), Строка);	
	КонецЦикла;	
	
	РезультатРедактирования = ФормаРедактирования.ОткрытьМодально();

	Если РезультатРедактирования <> Неопределено Тогда
		НастройкаВыгрузкиТЧ 	= РезультатРедактирования.ТабличныеЧасти;
		СвязиТабличныхЧастей 	= РезультатРедактирования.СвязиТабличныхЧастей;
		ТекущееСоответствиеТаблицПравилОбмена.Вставить("Выгрузка1С", ТипИсходногоДокумента1С);
		ТекущееСоответствиеТаблицПравилОбмена.Вставить("ЗагрузкаВыгрузкаMS", ТипДокументаMS);
		ЕстьИзмененияНаФорме = Истина;
		УстановитьЦветаЭлементов();
	КонецЕсли;	
			
КонецПроцедуры

Процедура НастроитьРеквизитыШапкиЗагрузкаНажатие(Элемент)
	
	ОчиститьТаблицыПравилОбмена();
	
	ФормаРедактирования = ПолучитьФорму("ФормаНастройки_ПравилаЗагрузкиПолей", ЭтаФорма, ЭтаФорма);
	ФормаРедактирования._ЛокКонтекст              = _ЛокКонтекст;
	ФормаРедактирования.КлючНастройки             = "Загрузка_ШапкаДокумента";
	ФормаРедактирования.КонтрольКоличества        = КонтрольКоличества;
	ФормаРедактирования.ТипДокумента1С            = ТипРезультирующегоДокумента1С;
	ФормаРедактирования.ТипДокументаMS            = ТипДокументаMS;
	ФормаРедактирования.ТаблицаРеквизитовИсходная = НастройкаЗагрузкиПолей.Скопировать();
	ФормаРедактирования.Обработчик_ПередЗаполнениемДокумента = Обработчик_ПередЗаполнениемДокумента;
	ФормаРедактирования.Обработчик_ПослеЗаполненияДокумента = Обработчик_ПослеЗаполненияДокумента;
	
	РезультатРедактирования = ФормаРедактирования.ОткрытьМодально();;

	Если РезультатРедактирования <> Неопределено Тогда
		НастройкаЗагрузкиПолей = РезультатРедактирования.ТаблицаНастроек;
		Обработчик_ПередЗаполнениемДокумента = РезультатРедактирования.Обработчик_ПередЗаполнениемДокумента;
		Обработчик_ПослеЗаполненияДокумента = РезультатРедактирования.Обработчик_ПослеЗаполненияДокумента;
		ТекущееСоответствиеТаблицПравилОбмена.Вставить("Загрузка1С", ТипРезультирующегоДокумента1С);
		ТекущееСоответствиеТаблицПравилОбмена.Вставить("ЗагрузкаВыгрузкаMS", ТипДокументаMS);
		ЕстьИзмененияНаФорме = Истина;
		УстановитьЦветаЭлементов();
	КонецЕсли;
	
КонецПроцедуры

Процедура НастроитьРеквизитыТабличнойЧастиЗагрузкаНажатие(Элемент)
	
	ОчиститьТаблицыПравилОбмена();
	
	ФормаРедактирования = ПолучитьФорму("ФормаНастройки_ПравилаЗагрузкиТЧ", ЭтаФорма, ЭтаФорма);
	ФормаРедактирования._ЛокКонтекст = _ЛокКонтекст;
    ФормаРедактирования.Заголовок = "Клеверенс: Редактирование сопоставления реквизитов таблиц документа";
	ФормаРедактирования.СтруктураДокумента1С = _ЛокКонтекст.СтруктураМетаданных.Документы1С[ТипРезультирующегоДокумента1С];
	ФормаРедактирования.СтруктураДокументаMS = _ЛокКонтекст.СтруктураМетаданных.ДокументыMS[ТипДокументаMS];
	ФормаРедактирования.ТабличныеЧасти.Колонки.Добавить("ТабличнаяЧастьДокумента1С", Новый ОписаниеТипов("ТаблицаЗначений"));		
	
	ФормаРедактирования.КонтрольКоличества        = КонтрольКоличества;
	ФормаРедактирования.ТипДокумента1С            = ТипРезультирующегоДокумента1С;
	ФормаРедактирования.ТипДокументаMS            = ТипДокументаMS;
	ФормаРедактирования.ТаблицаРеквизитовДополнительная = НастройкаЗагрузкиПолей.Скопировать();
	
	Для Каждого СтрокаНастройки Из НастройкаЗагрузкиТЧ Цикл
		СтрокаПриемник = ФормаРедактирования.ТабличныеЧасти.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПриемник, СтрокаНастройки);
		СтрокаПриемник.ТабличнаяЧастьДокумента1С = СтрокаНастройки.ТабличнаяЧастьДокумента1С;
	КонецЦикла;
	
	РезультатРедактирования = ФормаРедактирования.ОткрытьМодально();

	Если РезультатРедактирования <> Неопределено Тогда
		НастройкаЗагрузкиТЧ = РезультатРедактирования;
		ТекущееСоответствиеТаблицПравилОбмена.Вставить("Загрузка1С", ТипРезультирующегоДокумента1С);
		ТекущееСоответствиеТаблицПравилОбмена.Вставить("ЗагрузкаВыгрузкаMS", ТипДокументаMS);
		ЕстьИзмененияНаФорме = Истина;
		УстановитьЦветаЭлементов();
	КонецЕсли;
	
КонецПроцедуры

Процедура НазначитьПользователюНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаРедактирования = ПолучитьФорму("ФормаСлужебная_ВыборПользователяИлиГруппы", ЭтаФорма, ЭтаФорма);
	ФормаРедактирования._ЛокКонтекст 			= _ЛокКонтекст;
	ФормаРедактирования.ТекущиеПользователи 	= НазначитьПользователю;
	ФормаРедактирования.ПользователиMS			= _ЛокКонтекст.СтруктураМетаданных.ПользователиMS;
	РезультатРедактирования 						= ФормаРедактирования.ОткрытьМодально();		
	
	Если РезультатРедактирования <> Неопределено И ТипЗнч(РезультатРедактирования) = Тип("Массив") Тогда
		
		НазначитьПользователю = "";			
		Для каждого Элемент Из РезультатРедактирования Цикл								
			НазначитьПользователю = НазначитьПользователю + Элемент.Ид + "|";		
		КонецЦикла; 			
		НазначитьПользователю = Лев(НазначитьПользователю, СтрДлина(НазначитьПользователю) - 1);					
		
	КонецЕсли;	
	
	ЭлементыФормы.КопияДокументаДляКаждогоПользователя.Доступность = ?(НазначитьПользователю = "Спрашивать при выгрузке",Истина,Ложь);
	
КонецПроцедуры

Процедура НастроитьРеквизитыПредставленияШапкиНажатие(Элемент)
	
	ОчиститьТаблицыПравилОбмена();
	
	ФормаРедактирования = ПолучитьФорму("ФормаНастройки_ПредставленияРеквизитовДокумента", ЭтаФорма, ЭтаФорма);
	ФормаРедактирования._ЛокКонтекст                    		= _ЛокКонтекст;
	
	ФормаРедактирования.ТипДокумента1С                  	  	= ТипИсходногоДокумента1С;
	ФормаРедактирования.ТипДокументаMS				= ТипДокументаMS;
	ФормаРедактирования.ТаблицаРеквизитовИсходная 	= НастройкаПредставленийРеквизитовДокумента.Скопировать();
	ФормаРедактирования.ЗаменитьПредставлениеДокументаПриВыгрузке = ЗаменитьПредставлениеДокументаПриВыгрузке;
	
	РезультатРедактирования = ФормаРедактирования.ОткрытьМодально();
	
	Если РезультатРедактирования <> Неопределено Тогда
		НастройкаПредставленийРеквизитовДокумента   = РезультатРедактирования.ТаблицаНастроек;
		ЗаменитьПредставлениеДокументаПриВыгрузке = РезультатРедактирования.ЗаменитьПредставлениеДокументаПриВыгрузке;
		ТекущееСоответствиеТаблицПравилОбмена.Вставить("Выгрузка1С", ТипИсходногоДокумента1С);
		ТекущееСоответствиеТаблицПравилОбмена.Вставить("ЗагрузкаВыгрузкаMS", ТипДокументаMS);
		ЕстьИзмененияНаФорме = Истина;
		УстановитьЦветаЭлементов();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеМеханизмыОтображенияЭлементовФормы

Процедура ОбновитьВсеДанныеЭлементовФормы()
	
	УстановитьЦветаЭлементов();
	УстановитьЗначенияРеквизитов();
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

Процедура УстановитьЦветаЭлементов()
	
	ЭлементыФормы.Используется.ЦветТекста = ?(Используется, WebЦвета.Зеленый, WebЦвета.Красный);
	ЭлементыФормы.НадписьТипБизнесПроцесса.ЦветТекста = ?(ЭтоТиповойБизнесПроцесс, WebЦвета.Красный, WebЦвета.Зеленый);
	
	ЭлементыФормы.НастроитьРеквизитыШапкиВыгрузка.ЦветТекста = ?(НастройкаВыгрузкиПолей.Количество() > 0, WebЦвета.Зеленый, WebЦвета.Красный);
	ЭлементыФормы.НастроитьРеквизитыШапкиЗагрузка.ЦветТекста = ?(НастройкаЗагрузкиПолей.Количество() > 0, WebЦвета.Зеленый, WebЦвета.Красный);
	ЭлементыФормы.НастроитьРеквизитыТабличнойЧастиВыгрузка.ЦветТекста = ?(НастройкаВыгрузкиТЧ.Количество() > 0, WebЦвета.Зеленый, WebЦвета.Красный);
	ЭлементыФормы.НастроитьРеквизитыТабличнойЧастиЗагрузка.ЦветТекста = ?(НастройкаЗагрузкиТЧ.Количество() > 0, WebЦвета.Зеленый, WebЦвета.Красный);
	ЭлементыФормы.НастроитьРеквизитыПредставленияШапки.ЦветТекста = ?(НастройкаПредставленийРеквизитовДокумента.Количество() > 0, WebЦвета.Зеленый, WebЦвета.Красный);
	
КонецПроцедуры

Процедура УстановитьЗначенияРеквизитов()
	
	Если ЗначениеЗаполнено(ТипИсходногоДокумента1С) Тогда
		ЭлементыФормы.ТипИсходногоДокумента1С.Значение = ТипИсходногоДокумента1С;
		ЭлементСпискаДокументов = СписокТиповДокументов1С.НайтиПоЗначению(ТипИсходногоДокумента1С);
		Если ЭлементСпискаДокументов <> Неопределено Тогда
			ТипИсходногоДокумента1С_Синоним = ЭлементСпискаДокументов.Представление;
		КонецЕсли;
	Иначе
		ЗагружатьВТотЖе = Ложь;		
		КонтрольКоличества = Ложь;
	КонецЕсли;
	
	Если ЗагружатьВТотЖе Тогда
		ТипРезультирующегоДокумента1С = ТипИсходногоДокумента1С;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТипДокументаMS) Тогда
		ЭлементыФормы.ТипДокументаMS.Значение = ТипДокументаMS;
		ЭлементСпискаДокументов = СписокТиповДокументовMS.НайтиПоЗначению(ТипДокументаMS);
		Если ЭлементСпискаДокументов <> Неопределено Тогда
			ТипДокументаMS_Синоним = ЭлементСпискаДокументов.Представление;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТипРезультирующегоДокумента1С) Тогда
		ЭлементыФормы.ТипРезультирующегоДокумента1С.Значение = ТипРезультирующегоДокумента1С;
		ЭлементСпискаДокументов = СписокТиповДокументов1С.НайтиПоЗначению(ТипРезультирующегоДокумента1С);
		Если ЭлементСпискаДокументов <> Неопределено Тогда
			ТипРезультирующегоДокумента1С_Синоним = ЭлементСпискаДокументов.Представление;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьДоступностьЭлементов()
	
	ЭлементыФормы.ЗагружатьВТотЖе.Доступность = ЗначениеЗаполнено(ТипИсходногоДокумента1С);
	ЭлементыФормы.ТипРезультирующегоДокумента1С.Доступность = НЕ ЗагружатьВТотЖе;
	
	ЭлементыФормы.НастроитьРеквизитыШапкиВыгрузка.Доступность = ЗначениеЗаполнено(ТипИсходногоДокумента1С);
	ЭлементыФормы.НастроитьРеквизитыТабличнойЧастиВыгрузка.Доступность = ЗначениеЗаполнено(ТипИсходногоДокумента1С);	
	ЭлементыФормы.НастроитьРеквизитыПредставленияШапки.Доступность = ЗначениеЗаполнено(ТипИсходногоДокумента1С);	
	
	ЭлементыФормы.НастроитьРеквизитыШапкиЗагрузка.Доступность = ЗначениеЗаполнено(ТипРезультирующегоДокумента1С);
	ЭлементыФормы.НастроитьРеквизитыТабличнойЧастиЗагрузка.Доступность = ЗначениеЗаполнено(ТипРезультирующегоДокумента1С);
	ЭлементыФормы.КонтрольКоличества.Доступность = ЗначениеЗаполнено(ТипИсходногоДокумента1С);
	
	ЭлементыФормы.КопияДокументаДляКаждогоПользователя.Доступность = ?(НазначитьПользователю = "Спрашивать при выгрузке",Истина,Ложь);

КонецПроцедуры

#КонецОбласти

Процедура СохранитьНастройку()
	
	ОчиститьТаблицыПравилОбмена();
	
	СтруктураНастройки = Новый Структура;
	СтруктураНастройки.Вставить("ID_БизнесПроцесса",                    ID_БизнесПроцесса);
	СтруктураНастройки.Вставить("Используется",                         Используется);
	СтруктураНастройки.Вставить("ЭтоТиповойБизнесПроцесс",              ЭтоТиповойБизнесПроцесс);
	СтруктураНастройки.Вставить("Название",                             Название);
	СтруктураНастройки.Вставить("ТипИсходногоДокумента1С",              ТипИсходногоДокумента1С);
	СтруктураНастройки.Вставить("ТипРезультирующегоДокумента1С",        ТипРезультирующегоДокумента1С);
	СтруктураНастройки.Вставить("ТипДокументаMS",                       ТипДокументаMS);	
	СтруктураНастройки.Вставить("ЗагружатьВТотЖе",                      ЗагружатьВТотЖе);
	СтруктураНастройки.Вставить("КоллективнаяРабота",                   КоллективнаяРабота);
	СтруктураНастройки.Вставить("КонтрольКоличества",                   КонтрольКоличества);
	СтруктураНастройки.Вставить("СоздаватьНовыйДокументПриЗагрузке",    СоздаватьНовыйДокументПриЗагрузке);
	СтруктураНастройки.Вставить("ПроводитьДокументПослеЗагрузки",       ПроводитьДокументПослеЗагрузки);
	СтруктураНастройки.Вставить("НастройкаВыгрузкиПолей",               НастройкаВыгрузкиПолей);
	СтруктураНастройки.Вставить("НастройкаВыгрузкиТЧ",                  НастройкаВыгрузкиТЧ);
	СтруктураНастройки.Вставить("НастройкаЗагрузкиПолей",               НастройкаЗагрузкиПолей);
	СтруктураНастройки.Вставить("НастройкаЗагрузкиТЧ",                  НастройкаЗагрузкиТЧ);
	СтруктураНастройки.Вставить("Обработчик_ПередЗаполнениемДокумента", Обработчик_ПередЗаполнениемДокумента);
	СтруктураНастройки.Вставить("Обработчик_ПослеЗаполненияДокумента",  Обработчик_ПослеЗаполненияДокумента);
	СтруктураНастройки.Вставить("Комментарий",                          Комментарий);
	СтруктураНастройки.Вставить("НазначитьПользователю",                НазначитьПользователю);
	СтруктураНастройки.Вставить("ЗаписыватьДокументПослеЗагрузки",      ЗаписыватьДокументПослеЗагрузки);	
	СтруктураНастройки.Вставить("СвязиТабличныхЧастей",	 	     		СвязиТабличныхЧастей);
	СтруктураНастройки.Вставить("КопияДокументаДляКаждогоПользователя",	КопияДокументаДляКаждогоПользователя);
	СтруктураНастройки.Вставить("ВыполнитьТолькоПроизвольныйКод",		ВыполнитьТолькоПроизвольныйКод);
	СтруктураНастройки.Вставить("НастройкаПредставленийРеквизитовДокумента",		НастройкаПредставленийРеквизитовДокумента);
	СтруктураНастройки.Вставить("ЗаменитьПредставлениеДокументаПриВыгрузке",		ЗаменитьПредставлениеДокументаПриВыгрузке);
	СтруктураНастройки.Вставить("НеРазбиватьОбъединенныйДокументПриЗагрузке",		НеРазбиватьОбъединенныйДокументПриЗагрузке);
	
	Отбор = Новый Структура("ID_БизнесПроцесса", ID_БизнесПроцесса);
	_ЛокКонтекст.ЛокЯдро_СохранитьСтрокуВТабличнойНастройкеMS("НастройкиБизнесПроцессов", Отбор, СтруктураНастройки);
	
	ВыгрузитьБизнесПроцессы();
	
	РезультатРедактирования = ID_БизнесПроцесса;
	ЕстьИзмененияНаФорме = Ложь;
	
	ОбновитьВсеДанныеЭлементовФормы();
	
КонецПроцедуры

Процедура ВыгрузитьБизнесПроцессы()
		
	ВладелецФормы.ВыгрузитьБизнесПроцессы();	

КонецПроцедуры

Процедура ОчиститьТаблицыПравилОбмена()
	
	// Решена задача из FlowLu: 
	// При изменении исходного, результирующего документа 1С или документа MS не должны пропадать настройки сопоставления выгрузки/загрузки полей шапки и ТЧ
	Возврат;
	
	ОчиститьВыгрузку = Ложь;
	ОчиститьЗагрузку = Ложь;
	
	Если ТекущееСоответствиеТаблицПравилОбмена.ЗагрузкаВыгрузкаMS <> ТипДокументаMS ИЛИ НЕ ЗначениеЗаполнено(ТипДокументаMS) Тогда
		ОчиститьВыгрузку = Истина;
		ОчиститьЗагрузку = Истина;
	Иначе
		Если ТекущееСоответствиеТаблицПравилОбмена.Выгрузка1С <> ТипИсходногоДокумента1С ИЛИ НЕ ЗначениеЗаполнено(ТипИсходногоДокумента1С) Тогда
			ОчиститьВыгрузку = Истина;
		КонецЕсли;
		Если ТекущееСоответствиеТаблицПравилОбмена.Загрузка1С <> ТипРезультирующегоДокумента1С ИЛИ НЕ ЗначениеЗаполнено(ТипРезультирующегоДокумента1С) Тогда
			ОчиститьЗагрузку = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ОчиститьВыгрузку Тогда
		НастройкаВыгрузкиПолей.Очистить();
		НастройкаВыгрузкиТЧ.Очистить();
		ЕстьИзмененияНаФорме = Истина;
	КонецЕсли;
	
	Если ОчиститьЗагрузку Тогда
		НастройкаЗагрузкиПолей.Очистить();
		НастройкаЗагрузкиТЧ.Очистить();
		ЕстьИзмененияНаФорме = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗакрытьФормуСРезультатом()
	
	ЗакрытьФорму = Истина;
	
	Если ЕстьИзмененияНаФорме Тогда 
		ТекстВопроса = "Сохранить внесенные изменения?";
		ОтветПользователя = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена,, КодВозвратаДиалога.Да, "Внимание!");
		Если ОтветПользователя = КодВозвратаДиалога.Да Тогда
			СохранитьНастройку();
		ИначеЕсли ОтветПользователя = КодВозвратаДиалога.Отмена Тогда
			ЗакрытьФорму = Ложь;
		КонецЕсли;
	КонецЕсли;
		
	Если ЗакрытьФорму Тогда
		Закрыть(РезультатРедактирования);
	КонецЕсли;
	
КонецПроцедуры




