Перем ПредыдущееЗначение;

#Область ОбработчикиСобытийФорм

Процедура ПриОткрытии()
	
	ЭтоТекущийУзел = ID_Узла = _ЛокКонтекст.ДанныеТекущегоУзла.ID_Узла;
	Если ЭтоТекущийУзел Тогда
		ЗначениеНастройки = _ЛокКонтекст.ЛокЯдро_ПолучитьИзКэшаНастройкуSMARTS("НастройкиОбменаСправочников");				
	Иначе
		ЗначениеНастройки = _ЛокКонтекст.ЛокЯдро_ПолучитьНастройкуНаСервереSMARTS("НастройкиОбменаСправочников", ID_Узла);
	КонецЕсли;	
	
	СписокИспользуемыхСправочников = _ЛокКонтекст.ЛокЯдро_ПолучитьСписокИспользуемыхСправочников();
	
	СписокСохраненныхИмен = Новый СписокЗначений;
	СписокСтрокКУдалению = Новый СписокЗначений;
	Если НЕ ЗначениеНастройки = Ложь И ЗначениеЗаполнено(ЗначениеНастройки) Тогда
		Для Каждого СтрокаНастройки Из ЗначениеНастройки Цикл
			НоваяСтрока = НастройкиОбменаСправочников.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаНастройки);
			// Временное решение для совместимости с сохраненными настройками от старых версий
			// в настройки сохранялся СписокЗначений, в новой версии разделил на ИмяТаблицы и ИмяТаблицыПредставление для возможности сохранения в файл
			Если ТипЗнч(СтрокаНастройки.ИмяТаблицы) = Тип("ЭлементСпискаЗначений") Тогда
				НоваяСтрока.ИмяТаблицы = СтрокаНастройки.ИмяТаблицы.Значение;
				СписокСохраненныхИмен.Добавить(СтрокаНастройки.ИмяТаблицы.Значение);
			Иначе
				СписокСохраненныхИмен.Добавить(СтрокаНастройки.ИмяТаблицы);
			КонецЕсли;
			// конец
			
			// в интеграционной обработке прописывается использование справочника в зависимости от значения констант в 1С
			// проверяем, если что-то отключили, то удалим такие строки.
			ЭлементСписка = СписокИспользуемыхСправочников.НайтиПоЗначению(НоваяСтрока.ИмяТаблицы);
			Если ЭлементСписка <> Неопределено Тогда 
				Если Не ЗначениеЗаполнено(НоваяСтрока.ИмяТаблицыПредставление) Тогда
					НоваяСтрока.ИмяТаблицыПредставление = ЭлементСписка.Представление;
				КонецЕсли;
			Иначе
				СписокСтрокКУдалению.Добавить(НоваяСтрока);
			КонецЕсли;						
		КонецЦикла;
	КонецЕсли;
	
	Если СписокСтрокКУдалению.Количество() > 0 Тогда
		Для Каждого Строка Из СписокСтрокКУдалению Цикл
			НастройкиОбменаСправочников.Удалить(Строка.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого ИмяСправочника ИЗ СписокИспользуемыхСправочников Цикл
		Если СписокСохраненныхИмен.НайтиПоЗначению(ИмяСправочника.Значение) = Неопределено Тогда
			НоваяСтрока = НастройкиОбменаСправочников.Добавить();			
			НоваяСтрока.ИмяТаблицы = ИмяСправочника.Значение;			
			НоваяСтрока.ИмяТаблицыПредставление = ИмяСправочника.Представление;			
			// настройки для каждого справочника лежат в отдельных ключах, поэтому проверяем так 
			Если ИмяСправочника.Значение = "Номенклатура" Тогда
				НоваяСтрока.Выгружать = _ЛокКонтекст.ЛокЯдро_ПолучитьНастройкуНаСервереSMARTS("ВыгружатьНоменклатуруСразу");
			ИначеЕсли ИмяСправочника.Значение = "Контрагенты" Тогда
				НоваяСтрока.Выгружать = _ЛокКонтекст.ЛокЯдро_ПолучитьНастройкуНаСервереSMARTS("ВыгружатьКонтрагентовСразу");
			ИначеЕсли ИмяСправочника.Значение = "Остатки" Тогда
				НоваяСтрока.Выгружать = _ЛокКонтекст.ЛокЯдро_ПолучитьНастройкуНаСервереSMARTS("ВыгружатьОстаткиСразу");
			ИначеЕсли ИмяСправочника.Значение = "Серии" Тогда
				НоваяСтрока.Выгружать = _ЛокКонтекст.ЛокЯдро_ПолучитьНастройкуНаСервереSMARTS("ВыгружатьСерииСразу");	
			ИначеЕсли ИмяСправочника.Значение = "Склады" Тогда
				НоваяСтрока.Выгружать = _ЛокКонтекст.ЛокЯдро_ПолучитьНастройкуНаСервереSMARTS("ВыгружатьСкладыСразу");
			ИначеЕсли ИмяСправочника.Значение = "ФормыА" Тогда
				НоваяСтрока.Выгружать = _ЛокКонтекст.ЛокЯдро_ПолучитьНастройкуНаСервереSMARTS("ВыгружатьФормыАСразу");
			ИначеЕсли ИмяСправочника.Значение = "Характеристики" Тогда
				НоваяСтрока.Выгружать = _ЛокКонтекст.ЛокЯдро_ПолучитьНастройкуНаСервереSMARTS("ВыгружатьХарактеристикиСразу");
			ИначеЕсли ИмяСправочника.Значение = "Цены" Тогда
				НоваяСтрока.Выгружать = _ЛокКонтекст.ЛокЯдро_ПолучитьНастройкуНаСервереSMARTS("ВыгружатьЦеныСразу");				
			ИначеЕсли ИмяСправочника.Значение = "БутылкиЕГАИС" Тогда
				НоваяСтрока.Выгружать = _ЛокКонтекст.ЛокЯдро_ПолучитьНастройкуНаСервереSMARTS("ВыгружатьАкцизныеМаркиСразу");				
			ИначеЕсли ИмяСправочника.Значение = "КоробкиЕГАИС" Тогда
				НоваяСтрока.Выгружать = _ЛокКонтекст.ЛокЯдро_ПолучитьНастройкуНаСервереSMARTS("ВыгружатьКоробкиСразу");				
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;
		
	
	ЗаполнитьКолонкиФиктивнымиНадписями();
	
	ПереписыватьНоменклатуруПриВыгрузке = _ЛокКонтекст.ЛокЯдро_ПолучитьИзКэшаНастройкуSMARTS("ПереписыватьНоменклатуруПриВыгрузке");
	ИспользоватьШаблоныВесовогоТовара 	= _ЛокКонтекст.ЛокЯдро_ПолучитьИзКэшаНастройкуSMARTS("ИспользоватьШаблоныВесовогоТовара");
	ПрефиксКодаВесовогоТовара 			= _ЛокКонтекст.ЛокЯдро_ПолучитьИзКэшаНастройкуSMARTS("ПрефиксКодаВесовогоТовара");
	ЧислоЗнаковПослеЗапятойВесТовара 	= _ЛокКонтекст.ЛокЯдро_ПолучитьИзКэшаНастройкуSMARTS("ЧислоЗнаковПослеЗапятойВесТовара");
	ДлинаКодаВесовогоТовара 				= _ЛокКонтекст.ЛокЯдро_ПолучитьИзКэшаНастройкуSMARTS("ДлинаКодаВесовогоТовара");
	ПрефиксВключенВКодВесовогоТовара	= _ЛокКонтекст.ЛокЯдро_ПолучитьИзКэшаНастройкуSMARTS("ПрефиксВключенВКодВесовогоТовара");
	РазмерПорцииНоменклатуры			= _ЛокКонтекст.ЛокЯдро_ПолучитьИзКэшаНастройкуSMARTS("РазмерПорцииНоменклатуры");
	ВыгружатьНоменклатуруДокументаПередВыгрузкойДокумента	= _ЛокКонтекст.ЛокЯдро_ПолучитьИзКэшаНастройкуSMARTS("ВыгружатьНоменклатуруДокументаПередВыгрузкойДокумента");
	
	ЭтаФорма.Заголовок = ЭтаФорма.Заголовок + ЭтаФорма.НаименованиеУзла;	
	ЭлементыФормы.НастройкиОбменаСправочников.Колонки.ИмяТаблицы.Видимость = Ложь;
	ОбновитьДоступностьЭлементов();
	
КонецПроцедуры

Процедура ОбновитьДоступностьЭлементов()
	
	ЭлементыФормы.ПрефиксКодаВесовогоТовара.Доступность 				= ИспользоватьШаблоныВесовогоТовара;
	ЭлементыФормы.НадписьПрефиксКодаВесовогоТовара.Доступность			= ИспользоватьШаблоныВесовогоТовара;
	ЭлементыФормы.ПрефиксВключенВКодВесовогоТовара.Доступность 			= ИспользоватьШаблоныВесовогоТовара;
	ЭлементыФормы.ЧислоЗнаковПослеЗапятойВесТовара.Доступность 			= ИспользоватьШаблоныВесовогоТовара;
	ЭлементыФормы.НадписьЧислоЗнаковПослеЗапятойВесТовара.Доступность	= ИспользоватьШаблоныВесовогоТовара;
	ЭлементыФормы.ДлинаКодаВесовогоТовара.Доступность 					= ИспользоватьШаблоныВесовогоТовара;
	ЭлементыФормы.НадписьДлинаКодаВесовогоТовара.Доступность			= ИспользоватьШаблоныВесовогоТовара;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовФорм

Процедура ДействияФормыСохранитьЗакрыть(Кнопка)
	Если Не _ЛокКонтекст.КомЯдро_ПроверитьСоединениеССерверомSMARTS(, Ложь) Тогда
		Если _ЛокКонтекст.ЛокЯдро_ПредложитьПользователюСохранитьНастройкиВФайл() Тогда
			ДействияФормыСохранитьВФайл("");	
		КонецЕсли;		
		Возврат;
	КонецЕсли;
	
	СохранитьНастройки();
	Закрыть();
	
КонецПроцедуры

Процедура ДействияФормыСохранить(Кнопка)
	Если Не _ЛокКонтекст.КомЯдро_ПроверитьСоединениеССерверомSMARTS(, Ложь) Тогда
		Если _ЛокКонтекст.ЛокЯдро_ПредложитьПользователюСохранитьНастройкиВФайл() Тогда
			ДействияФормыСохранитьВФайл("");	
		КонецЕсли;		
		Возврат;
	КонецЕсли;
	
	СохранитьНастройки();
	
КонецПроцедуры

Процедура ДействияФормыСохранитьВФайл(Кнопка)
	
	СтруктураНастройки = Новый Структура;
	СтруктураНастройки.Вставить("НастройкиОбменаСправочников", НастройкиОбменаСправочников.Скопировать(, "Выгружать,ИмяТаблицы,ИмяТаблицыПредставление,НастройкаКомпоновщикаСтрокой"));
	СтруктураНастройки.Вставить("ИспользоватьШаблоныВесовогоТовара",   ИспользоватьШаблоныВесовогоТовара);
	СтруктураНастройки.Вставить("ПрефиксКодаВесовогоТовара",           ПрефиксКодаВесовогоТовара);
	СтруктураНастройки.Вставить("ЧислоЗнаковПослеЗапятойВесТовара",    ЧислоЗнаковПослеЗапятойВесТовара);
	СтруктураНастройки.Вставить("ДлинаКодаВесовогоТовара",             ДлинаКодаВесовогоТовара);
	СтруктураНастройки.Вставить("РазмерПорцииНоменклатуры",            РазмерПорцииНоменклатуры);
	
	_ЛокКонтекст.ЛокЯдро_СохранитьНастройкиВФайл(СтруктураНастройки, "НастройкиОбменаСправочников");
	
КонецПроцедуры

Процедура ДействияФормыЗагрузитьИзФайла(Кнопка)
	
	СтруктураНастроек = _ЛокКонтекст.ЛокЯдро_ПолучитьНастройкиИзФайла("НастройкиОбменаСправочников");
	Если СтруктураНастроек <> Неопределено Тогда
		_ЛокКонтекст.ЛокЯдро_ЗаполнитьФормуЗначениямиИзСтруктуры(ЭтаФорма, СтруктураНастроек);
	КонецЕсли;
	
	ЗаполнитьКолонкиФиктивнымиНадписями();
	
КонецПроцедуры

Процедура ИспользоватьШаблоныВесовогоТовараПриИзменении(Элемент)
	ОбновитьДоступностьЭлементов();
КонецПроцедуры

Процедура КнопкаПояснениеРазбивкиНажатие(Элемент)
		
	Предупреждение("Данную опцию рекомендуется использовать при наличии большого справочника номенклатуры 
	|и возникновения ошибок при выгрузке справочника стандартной выгрузкой", , "Внимание");
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийТабличногоПоля

Процедура НастройкиОбменаСправочниковВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	ИмяТаблицы = ВыбраннаяСтрока.ИмяТаблицы;

	Если Колонка.Имя = "Настройка" ИЛИ Колонка.Имя = "Предпросмотр"  Тогда 
		
		СтандартнаяОбработка = Ложь;
		ТекущаяСтрокаНастройки = ЭлементыФормы.НастройкиОбменаСправочников.ТекущаяСтрока;
		
		ФормаОтбора = ПолучитьФорму("ФормаНастройки_ОтборСправочников", ЭтаФорма, ЭтаФорма);
		ФормаОтбора.ID_Узла = ID_Узла;
		ФормаОтбора.ИмяТаблицы = ИмяТаблицы;
		ФормаОтбора.НастройкаКомпоновщикаСтрокой = ТекущаяСтрокаНастройки.НастройкаКомпоновщикаСтрокой;
		ФормаОтбора._ЛокКонтекст = _ЛокКонтекст;
		Если Колонка.Имя = "Предпросмотр" Тогда
			ФормаОтбора.Предпросмотр = Истина;
		КонецЕсли;
		
		РезультатНастройки = ФормаОтбора.ОткрытьМодально();
		Если ЗначениеЗаполнено(РезультатНастройки) Тогда
			ТекущаяСтрокаНастройки.НастройкаКомпоновщикаСтрокой = РезультатНастройки.НастройкаКомпоновщикаСтрокой;
		КонецЕсли;
		
	ИначеЕсли Колонка.Имя = "Выгрузка" Тогда
		
		Если Вопрос( "Выгрузить справочник "+ИмяТаблицы+"?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			Если ИмяТаблицы = "Номенклатура" Тогда				
				РазмерПорцииНоменклатуры = _ЛокКонтекст.ЛокЯдро_ПолучитьИзКэшаНастройкуSMARTS("РазмерПорцииНоменклатуры");
				Если РазмерПорцииНоменклатуры <> Ложь И ЗначениеЗаполнено(РазмерПорцииНоменклатуры) Тогда
					_ЛокКонтекст.ЛокЯдро_ВыгрузитьТаблицуНаСерверSMARTSПорциями("Номенклатура");
				Иначе
					_ЛокКонтекст.ЛокЯдро_ВыгрузитьТаблицуНаСерверSMARTS("Номенклатура");	
				КонецЕсли;													
			Иначе
				_ЛокКонтекст.ЛокЯдро_ВыгрузитьТаблицуНаСерверSMARTS(ИмяТаблицы);			
			КонецЕсли;	
		КонецЕсли;
		
	ИначеЕсли Колонка.Имя = "ОчисткаСправочника" Тогда
				
		Если Вопрос( "Очистить справочник "+ИмяТаблицы+"?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			_ЛокКонтекст.ЛокЯдро_ОчиститьТаблицуНаСервереSMARTS(ИмяТаблицы);
		КонецЕсли;
		
	КонецЕсли;
	Возврат;
КонецПроцедуры


Процедура НастройкиОбменаСправочниковИмяТаблицыНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	ПредыдущееЗначение = Элемент.Значение;
	ЭлементыФормы.НастройкиОбменаСправочников.Колонки.ИмяТаблицы.ЭлементУправления.СписокВыбора = ПолучитьСписокВыбораИменТаблиц();
КонецПроцедуры

Процедура НастройкиОбменаСправочниковПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ = Истина;
КонецПроцедуры

Процедура НастройкиОбменаСправочниковПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

Процедура КоманднаяПанель1ВыбратьВсе(Кнопка)
	
	Для Каждого Строка Из НастройкиОбменаСправочников Цикл
		Строка.Выгружать = Истина;
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанель1СнятьВсе(Кнопка)
	
	Для Каждого Строка Из НастройкиОбменаСправочников Цикл
		Строка.Выгружать = Ложь;
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанель1ВыгрузитьВыбранные(Кнопка)
	Если Не (Вопрос( "Выгрузить отмеченные справочники?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из НастройкиОбменаСправочников Цикл
		Если Строка.Выгружать = Истина Тогда
			
			Состояние("Выгрузка справочника ["+Строка.ИмяТаблицыПредставление+"]...");			
			
			Если Строка.ИмяТаблицы = "Номенклатура" Тогда				
				РазмерПорцииНоменклатуры = _ЛокКонтекст.ЛокЯдро_ПолучитьИзКэшаНастройкуSMARTS("РазмерПорцииНоменклатуры");
				Если РазмерПорцииНоменклатуры <> Ложь И ЗначениеЗаполнено(РазмерПорцииНоменклатуры) Тогда
					_ЛокКонтекст.ЛокЯдро_ВыгрузитьТаблицуНаСерверSMARTSПорциями("Номенклатура");
				Иначе
					_ЛокКонтекст.ЛокЯдро_ВыгрузитьТаблицуНаСерверSMARTS("Номенклатура");	
				КонецЕсли;													
			Иначе
				_ЛокКонтекст.ЛокЯдро_ВыгрузитьТаблицуНаСерверSMARTS(Строка.ИмяТаблицы);			
			КонецЕсли;							
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанель1ОчиститьВыбранные(Кнопка)
	Если Не (Вопрос( "Очистить отмеченные справочники?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да) Тогда
		Возврат;
	КонецЕсли;
	Для Каждого Строка Из НастройкиОбменаСправочников Цикл		
		Если Строка.Выгружать = Истина Тогда
			//Состояние("Очистка справочника ["+Строка.ИмяТаблицыПредставление+"]...");
			_ЛокКонтекст.ЛокЯдро_ОчиститьТаблицуНаСервереSMARTS(Строка.ИмяТаблицы);	
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти


#Область ВспомогательныеМеханизмы

Процедура СохранитьНастройки()
	
	ТаблицаДляСохранения = НастройкиОбменаСправочников.Скопировать(, "Выгружать,ИмяТаблицы,ИмяТаблицыПредставление,НастройкаКомпоновщикаСтрокой");
	_ЛокКонтекст.ЛокЯдро_СохранитьНастройкуВБазеSMARTS("НастройкиОбменаСправочников", ТаблицаДляСохранения, ID_Узла);
	Если ID_Узла = _ЛокКонтекст.ДанныеТекущегоУзла.ID_Узла Тогда
		_ЛокКонтекст.ЛокЯдро_ЗаписатьВКэшНастройкуSMARTS("НастройкиОбменаСправочников", ТаблицаДляСохранения);	
	КонецЕсли;
	
	СтруктураОбщихНастроек = Новый Структура;
	СтруктураОбщихНастроек.Вставить("ИспользоватьШаблоныВесовогоТовара",   ИспользоватьШаблоныВесовогоТовара);
	СтруктураОбщихНастроек.Вставить("ПрефиксКодаВесовогоТовара",           ПрефиксКодаВесовогоТовара);
	СтруктураОбщихНастроек.Вставить("ЧислоЗнаковПослеЗапятойВесТовара",    ЧислоЗнаковПослеЗапятойВесТовара);
	СтруктураОбщихНастроек.Вставить("ДлинаКодаВесовогоТовара",             ДлинаКодаВесовогоТовара);
	СтруктураОбщихНастроек.Вставить("ПрефиксВключенВКодВесовогоТовара",    ПрефиксВключенВКодВесовогоТовара);
	СтруктураОбщихНастроек.Вставить("РазмерПорцииНоменклатуры",    		   РазмерПорцииНоменклатуры);
	СтруктураОбщихНастроек.Вставить("ВыгружатьНоменклатуруДокументаПередВыгрузкойДокумента",    ВыгружатьНоменклатуруДокументаПередВыгрузкойДокумента);
	
	СтруктураОбщихНастроек.Вставить("ПереписыватьНоменклатуруПриВыгрузке", ПереписыватьНоменклатуруПриВыгрузке);
	СтруктураОбщихНастроек.Вставить("ID_ТекущегоУзла", 					   ID_Узла);
	
	// надо обнулить настройки, т.к. могут остаться параметры, установленные мастером настроек
	СтруктураОбщихНастроек.Вставить("ВыгружатьКонтрагентовСразу",          Ложь);
	СтруктураОбщихНастроек.Вставить("ВыгружатьНоменклатуруСразу",          Ложь);
	СтруктураОбщихНастроек.Вставить("ВыгружатьОстаткиСразу",               Ложь);
	СтруктураОбщихНастроек.Вставить("ВыгружатьСерииСразу",                 Ложь);
	СтруктураОбщихНастроек.Вставить("ВыгружатьСкладыСразу",                Ложь);
	СтруктураОбщихНастроек.Вставить("ВыгружатьФормыАСразу",                Ложь);
	СтруктураОбщихНастроек.Вставить("ВыгружатьХарактеристикиСразу",        Ложь);
	СтруктураОбщихНастроек.Вставить("ВыгружатьЦеныСразу",                  Ложь);
	СтруктураОбщихНастроек.Вставить("ВыгружатьАкцизныеМаркиСразу",         Ложь);
	СтруктураОбщихНастроек.Вставить("ВыгружатьКоробкиСразу",               Ложь);
	
	// Теперь запишем настройки с формы
	Для Каждого СтрокаНастройки Из НастройкиОбменаСправочников Цикл
		ИмяТаблицы = СтрокаНастройки.ИмяТаблицы;
		блВыгружать = СтрокаНастройки.Выгружать;
		Если ИмяТаблицы = "Номенклатура" Тогда
			СтруктураОбщихНастроек.Вставить("ВыгружатьНоменклатуруСразу",блВыгружать);
		ИначеЕсли ИмяТаблицы = "Контрагенты" Тогда
			СтруктураОбщихНастроек.Вставить("ВыгружатьКонтрагентовСразу",блВыгружать);
		ИначеЕсли ИмяТаблицы = "Остатки" Тогда
			СтруктураОбщихНастроек.Вставить("ВыгружатьОстаткиСразу",     блВыгружать);
		ИначеЕсли ИмяТаблицы = "Серии" Тогда
			СтруктураОбщихНастроек.Вставить("ВыгружатьСерииСразу",       блВыгружать);	
		ИначеЕсли ИмяТаблицы = "Склады" Тогда
			СтруктураОбщихНастроек.Вставить("ВыгружатьСкладыСразу",      блВыгружать);
		ИначеЕсли ИмяТаблицы = "ФормыА" Тогда
			СтруктураОбщихНастроек.Вставить("ВыгружатьФормыАСразу",      блВыгружать);
		ИначеЕсли ИмяТаблицы = "Характеристики" Тогда
			СтруктураОбщихНастроек.Вставить("ВыгружатьХарактеристикиСразу",блВыгружать);
		ИначеЕсли ИмяТаблицы = "Цены" Тогда
			СтруктураОбщихНастроек.Вставить("ВыгружатьЦеныСразу",        блВыгружать);				
		ИначеЕсли ИмяТаблицы = "БутылкиЕГАИС" Тогда
			СтруктураОбщихНастроек.Вставить("ВыгружатьАкцизныеМаркиСразу",блВыгружать);				
		ИначеЕсли ИмяТаблицы = "КоробкиЕГАИС" Тогда
			СтруктураОбщихНастроек.Вставить("ВыгружатьКоробкиСразу",     блВыгружать);				
		КонецЕсли;
	КонецЦикла;
	
	_ЛокКонтекст.ЛокЯдро_СохранитьНастройкиВБазеSMARTS(СтруктураОбщихНастроек);
	_ЛокКонтекст.ЛокЯдро_ЗаписатьВКэшНастройкиSMARTS(СтруктураОбщихНастроек);
	_ЛокКонтекст.ЛокЯдро_СохранитьШаблоныВесовогоТовараВБазеSMARTS();

КонецПроцедуры

Процедура ЗаполнитьКолонкиФиктивнымиНадписями()
	НастройкиОбменаСправочников.ЗаполнитьЗначения("Выгрузка...", "Выгрузка");
	НастройкиОбменаСправочников.ЗаполнитьЗначения("Предпросмотр...", "Предпросмотр");
	НастройкиОбменаСправочников.ЗаполнитьЗначения("Очистка справочника...", "ОчисткаСправочника");
КонецПроцедуры 

Функция ПолучитьСписокВыбораИменТаблиц()
	
	//СписокВыбора = Новый СписокЗначений;
	//СписокВыбора.Добавить("Номенклатура",   "Номенклатура");
	//СписокВыбора.Добавить("Характеристики", "Характеристики номенклатуры");
	//СписокВыбора.Добавить("Серии",          "Серии номенклатуры");
	//СписокВыбора.Добавить("Склады",         "Склады (места хранения)");
	//СписокВыбора.Добавить("ФормыА",         "Формы ""А"" (ЕГАИС)");
	//СписокВыбора.Добавить("Остатки",        "Остатки номенклатуры на складах");
	//СписокВыбора.Добавить("Цены",           "Цены номенклатуры");
	СписокВыбора = _ЛокКонтекст.ЛокЯдро_ПолучитьСписокИспользуемыхСправочников();
	
	Для Каждого СтрокаНастройки Из НастройкиОбменаСправочников Цикл
		НайденныйЭлемент = СписокВыбора.НайтиПоЗначению(СтрокаНастройки.ИмяТаблицы);
		Если НайденныйЭлемент <> Неопределено Тогда
			СписокВыбора.Удалить(НайденныйЭлемент);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокВыбора;
	
КонецФункции

Процедура НастройкиОбменаСправочниковПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
		
	флНастроено = ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.НастройкаКомпоновщикаСтрокой);
	
	Если флНастроено Тогда
		ОформлениеСтроки.Ячейки.Настройка.Текст = "Настроено";
	Иначе		
		ОформлениеСтроки.Ячейки.Настройка.Текст = "Настроить";			
	КонецЕсли;
	ОформлениеСтроки.Ячейки.Настройка.ЦветТекста = ?(флНастроено, WebЦвета.Зеленый, WebЦвета.Красный);

КонецПроцедуры

#КонецОбласти
