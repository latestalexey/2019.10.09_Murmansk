Перем ПредыдущееЗначение;

#Область ОбработчикиСобытийФормы

Процедура ПриОткрытии()
	
	ЭлементыФормы.ТипДокумента1С.Заголовок = _ЛокКонтекст.СтруктураМетаданных.Документы1С[ТипДокумента1С].Синоним;
	ЭлементыФормы.ТипДокументаMS.Заголовок = _ЛокКонтекст.СтруктураМетаданных.ДокументыMS[ТипДокументаMS].Синоним;
	
	Если КлючНастройки = "Загрузка_ШапкаДокумента" Тогда
		
		Заголовок = "Клеверенс: Настройка загрузки полей шапки документа";
		СписокРеквизитов1С = _ЛокКонтекст.СтруктураМетаданных.Документы1С[ТипДокумента1С].Реквизиты.Скопировать();
		СписокРеквизитовMS = _ЛокКонтекст.СтруктураМетаданных.ДокументыMS[ТипДокументаMS].Реквизиты.Скопировать();
		СтруктураТабличныхЧастейДокумента = _ЛокКонтекст.СтруктураМетаданных.Документы1С[ТипДокумента1С];
		
		ЭлементыФормы.ПанельОбработчиковТабличнойЧасти.Свертка = РежимСверткиЭлементаУправления.Верх;
		
		ЭлементыФормы.ТаблицаРеквизитов.Колонки.Группировать.Видимость = Ложь;
		ЭлементыФормы.ТаблицаРеквизитов.Колонки.ОбработчикПодбораКоличества.Видимость = Ложь;
		ЭлементыФормы.ТаблицаРеквизитов.Колонки.ОчищатьПередЗагрузкой.Видимость = Ложь;
		ЭлементыФормы.ТаблицаРеквизитов.Колонки.ПравилоПоиска.Видимость = Ложь;
		ЭлементыФормы.ТаблицаРеквизитов.Колонки.ПравилоПоискаСиноним.Видимость = Ложь;
		
	ИначеЕсли КлючНастройки = "Загрузка_ТабличнаяЧастьДокумента" Тогда
		
		ЭлементыФормы.ТаблицаРеквизитов.Колонки.Группировать.Видимость = Истина;
		ЭлементыФормы.ТаблицаРеквизитов.Колонки.ОбработчикПодбораКоличества.Видимость = Истина;
		ЭлементыФормы.ТаблицаРеквизитов.Колонки.ОчищатьПередЗагрузкой.Видимость = Истина;
		ЭлементыФормы.ТаблицаРеквизитов.Колонки.ПравилоПоиска.Видимость = Истина;
		ЭлементыФормы.ТаблицаРеквизитов.Колонки.ПравилоПоискаСиноним.Видимость = Истина;

		Заголовок = "Клеверенс: Настройка загрузки полей табличной части документа";
		СписокРеквизитов1С = _ЛокКонтекст.СтруктураМетаданных.Документы1С[ТипДокумента1С].ТабличныеЧасти[ИмяТабличнойЧасти1С].Реквизиты.Скопировать();
		
		СписокДопТаблиц = _ЛокКонтекст.СтруктураМетаданных.ДокументыMS[ТипДокументаMS].ДополнительныеТаблицы;
		ДополнительнаяТаблица = Неопределено;
		
		Для Каждого ДопТаблица Из СписокДопТаблиц Цикл
			Если ДопТаблица.Представление = ИмяТабличнойЧастиMS Тогда
				ДополнительнаяТаблица = ДопТаблица; 
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ДополнительнаяТаблица = Неопределено Тогда
			СписокРеквизитовMS = _ЛокКонтекст.СтруктураМетаданных.ДокументыMS[ТипДокументаMS].РеквизитыТЧ.Скопировать();
			СписокРеквизитовMS.Добавить("КлючСвязиСерий", "КлючСвязиСерий");
			СписокРеквизитовMS.Добавить("КлючСвязиСерийныхНомеров", "КлючСвязиСерийныхНомеров");
			// + ZHKN 03.10.2017
			Для Каждого ЭлементСписка Из СписокТаблицДляСвязиПоКлючу Цикл
				СписокРеквизитовMS.Добавить(ЭлементСписка.Представление, "Ключ связи для """+ЭлементСписка.Представление+"""");
			КонецЦикла;
			// - ZHKN 03.10.2017
		Иначе	
			СписокРеквизитовMS = ДополнительнаяТаблица.Значение.Скопировать();	
		КонецЕсли;
		
		СписокВычислимыхПолей = _ЛокКонтекст.ВычислимыеПоля.СписокПолейMS.Скопировать();
		
		ЭлементыФормы.ИмяТабличнойЧасти1С.Заголовок = _ЛокКонтекст.СтруктураМетаданных.Документы1С[ТипДокумента1С].ТабличныеЧасти[ИмяТабличнойЧасти1С].Синоним;
		ЭлементыФормы.ИмяТабличнойЧастиMS.Заголовок = ИмяТабличнойЧастиMS;
		
		ЭлементыФормы.ПанельОбработчиковДокумента.Свертка = РежимСверткиЭлементаУправления.Верх;
		
		СписокПравилПоиска.Добавить("Равно", "Равно или оба пустые");
		СписокПравилПоиска.Добавить("РавноПусто1С", "Равно или в 1С пусто");
		СписокПравилПоиска.Добавить("РавноПустоТСД", "Равно или на ТСД пусто");
		
	КонецЕсли;
	
	ОбновитьСписокПроизвольныхКодов();
	
	// Список Глобальных параметров
	ТаблицаГлобальныхПараметров = _ЛокКонтекст.ЛокЯдро_ПолучитьИзКэшаЗначениеТабличнойНастройкиSMARTS("ГлобальныеПараметры", Новый Структура("Использование", Истина));
	
	Если ТипЗнч(ТаблицаГлобальныхПараметров) = Тип("ТаблицаЗначений") Тогда  // ZHKN 13.09.2017
		Для Каждого СтрокаПараметра Из ТаблицаГлобальныхПараметров Цикл
		
			СписокГлобальныхПараметров.Добавить(СтрокаПараметра.ID_Параметра, СтрокаПараметра.Наименование);
		КонецЦикла;
	КонецЕсли;
	
	// Список категорий приемника
	СписокТиповПриемника.Добавить("Реквизит1С", "Фиксированный реквизит 1С");
	СписокТиповПриемника.Добавить("НовыйРеквизит", "Промежуточное значение");
	
	// Список категорий источника
	СписокТиповИсточника.Добавить("РеквизитMS", "Реквизит Mobile SMARTS");
	Если КлючНастройки = "Загрузка_ТабличнаяЧастьДокумента" Тогда
		СписокТиповИсточника.Добавить("ВычислимоеПоле", "Вычислимое поле");
	КонецЕсли;
	СписокТиповИсточника.Добавить("ГлобальныйПараметр", "Глобальный параметр");	
	СписокТиповИсточника.Добавить("ПроизвольноеЗначение", "Произвольное значение");	
	СписокТиповИсточника.Добавить("ПроизвольныйКод", "Произвольный код");	
	
	// Список правил сопоставления для ссылочных типов
	СписокСпособовСопоставления.Добавить("СтрокаGUID",       "Поиск по GUID");
	СписокСпособовСопоставления.Добавить("Наименование",     "Поиск по Наименованию (для справочников)");
	СписокСпособовСопоставления.Добавить("Код",              "Поиск по Коду (для справочников)");
	СписокСпособовСопоставления.Добавить("КакЕсть",          "Как есть (любой тип)");
	СписокСпособовСопоставления.Добавить("ПодборКоличества", "Подбор количества");
	
	ЭлементыФормы.ТаблицаРеквизитов.Колонки.ТипПриемникаСиноним.ЭлементУправления.СписокВыбора = СписокТиповПриемника.Скопировать();
	ЭлементыФормы.ТаблицаРеквизитов.Колонки.ТипИсточникаСиноним.ЭлементУправления.СписокВыбора = СписокТиповИсточника.Скопировать();
	ЭлементыФормы.ТаблицаРеквизитов.Колонки.СинонимПриемника.ЭлементУправления.СписокВыбора = СписокРеквизитов1С.Скопировать();
	ЭлементыФормы.ТаблицаРеквизитов.Колонки.СпособСопоставленияСиноним.ЭлементУправления.СписокВыбора = СписокСпособовСопоставления.Скопировать();
	ЭлементыФормы.ТаблицаРеквизитов.Колонки.ПравилоПоискаСиноним.ЭлементУправления.СписокВыбора = СписокПравилПоиска.Скопировать();
	
	// Видимость и значения элементов
	ЭлементыФормы.НадписьТабличнаяЧасть1С.Видимость = КлючНастройки = "Загрузка_ТабличнаяЧастьДокумента";
	ЭлементыФормы.ИмяТабличнойЧасти1С.Видимость     = КлючНастройки = "Загрузка_ТабличнаяЧастьДокумента";
	ЭлементыФормы.НадписьТабличнаяЧастьMS.Видимость = КлючНастройки = "Загрузка_ТабличнаяЧастьДокумента";
	ЭлементыФормы.ИмяТабличнойЧастиMS.Видимость     = КлючНастройки = "Загрузка_ТабличнаяЧастьДокумента";
	
	// Временное решение. В дальнейшем таблица должна передаваться напрямую
	Если ТипЗнч(ТаблицаРеквизитовИсходная) = Тип("ТаблицаЗначений") Тогда
		Для Каждого СтрокаИсходнойТаблицы Из ТаблицаРеквизитовИсходная Цикл
			НоваяСтрока = ТаблицаРеквизитов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаИсходнойТаблицы);
			
			// Временное решение. Загрузка старых настроек
			Если ТаблицаРеквизитовИсходная.Колонки.Найти("Имя1С") <> Неопределено Тогда
				НоваяСтрока.ИмяПриемника = СтрокаИсходнойТаблицы.Имя1С;
				НайденныйЭлементИмениПриемника = СписокРеквизитов1С.НайтиПоЗначению(НоваяСтрока.ИмяПриемника);
				Если НайденныйЭлементИмениПриемника <> Неопределено Тогда
					НоваяСтрока.СинонимПриемника = НайденныйЭлементИмениПриемника.Представление;
				Иначе
					НоваяСтрока.СинонимПриемника = СтрокаИсходнойТаблицы.Имя1С;
				КонецЕсли;
				НоваяСтрока.ТипПриемника = "Реквизит1С";
				НоваяСтрока.ТипПриемникаСиноним = "Фиксированный реквизит 1С";
			КонецЕсли;
			
			Если ТаблицаРеквизитовИсходная.Колонки.Найти("ИмяMS") <> Неопределено Тогда
				
				Если СтрокаИсходнойТаблицы.Тип = "Реквизит Mobile SMARTS" Тогда
					// ищем в реквизитах
					НайденныйЭлементИмениИсточника = СписокРеквизитовMS.НайтиПоЗначению(СтрокаИсходнойТаблицы.ИмяMS);
					Если НайденныйЭлементИмениИсточника <> Неопределено Тогда
						НоваяСтрока.ИмяИсточника = НайденныйЭлементИмениИсточника.Значение;
						НоваяСтрока.СинонимИсточника = НайденныйЭлементИмениИсточника.Представление;
						НоваяСтрока.ТипИсточника = "РеквизитMS";
						НоваяСтрока.ТипИсточникаСиноним = "Реквизит Mobile SMARTS";
					Иначе
						// ищем в вычислимых полях
						НайденныйЭлементИмениИсточника = СписокВычислимыхПолей.НайтиПоЗначению(СтрокаИсходнойТаблицы.ИмяMS);
						Если НайденныйЭлементИмениИсточника <> Неопределено Тогда
							НоваяСтрока.ИмяИсточника = НайденныйЭлементИмениИсточника.Значение;
							НоваяСтрока.СинонимИсточника = НайденныйЭлементИмениИсточника.Представление;
							НоваяСтрока.ТипИсточника = "ВычислимоеПоле";
							НоваяСтрока.ТипИсточникаСиноним = "Вычислимое поле";
						КонецЕсли;
					КонецЕсли;
					
					Если ЗначениеЗаполнено(НоваяСтрока.ИмяИсточника) Тогда
						Если ТаблицаРеквизитовИсходная.Колонки.Найти("ВыгружатьКакUID") <> Неопределено Тогда
							Если СтрокаИсходнойТаблицы.ВыгружатьКакUID = "Ссылка (поиск по GUID)" Тогда
								НоваяСтрока.СпособСопоставления = "СтрокаGUID";
								НоваяСтрока.СпособСопоставленияСиноним = "Поиск по GUID";
							ИначеЕсли СтрокаИсходнойТаблицы.ВыгружатьКакUID = "По наименованию" Тогда
								НоваяСтрока.СпособСопоставления = "Наименование";
								НоваяСтрока.СпособСопоставленияСиноним = "Поиск по Наименованию (для справочников)";
							ИначеЕсли СтрокаИсходнойТаблицы.ВыгружатьКакUID = "Код" Тогда
								НоваяСтрока.СпособСопоставления = "Код";
								НоваяСтрока.СпособСопоставленияСиноним = "Поиск по Коду (для справочников)";
							Иначе
								НоваяСтрока.СпособСопоставления = "КакЕсть";
								НоваяСтрока.СпособСопоставленияСиноним = "Как есть (любой тип)";
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
				ИначеЕсли СтрокаИсходнойТаблицы.Тип = "Дата" ИЛИ СтрокаИсходнойТаблицы.Тип = "Число" ИЛИ СтрокаИсходнойТаблицы.Тип = "Строка" ИЛИ СтрокаИсходнойТаблицы.Тип = "Булево" Тогда
					НоваяСтрока.ТипИсточника = "ПроизвольноеЗначение";
					НоваяСтрока.ТипИсточникаСиноним = "Произвольное значение";
					НоваяСтрока.СпособСопоставления = "КакЕсть";
					НоваяСтрока.СпособСопоставленияСиноним = "Как есть (любой тип)";
					НоваяСтрока.ЗначениеИсточника = СтрокаИсходнойТаблицы.ИмяMS;
				КонецЕсли;
				
			КонецЕсли;
			
			// Временное решение Окончание
			
		КонецЦикла;
		ТаблицаРеквизитовИсходная.Очистить();
	КонецЕсли;
	// Временное решение. Окончание.
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийОсновныеДействияФормы

Процедура ОсновныеДействияСохранитьИЗакрыть(Кнопка)
	
	Результат = Новый Структура;
	Результат.Вставить("ТаблицаНастроек", ТаблицаРеквизитов.Скопировать());
	Если КлючНастройки = "Загрузка_ШапкаДокумента" Тогда
		Результат.Вставить("Обработчик_ПередЗаполнениемДокумента", Обработчик_ПередЗаполнениемДокумента);
		Результат.Вставить("Обработчик_ПослеЗаполненияДокумента",  Обработчик_ПослеЗаполненияДокумента);
	ИначеЕсли КлючНастройки = "Загрузка_ТабличнаяЧастьДокумента" Тогда
		Результат.Вставить("Обработчик_ПередЗаполнениемТабличнойЧасти",       Обработчик_ПередЗаполнениемТабличнойЧасти);
		Результат.Вставить("Обработчик_ПередЗаполнениемСтрокиТабличнойЧасти", Обработчик_ПередЗаполнениемСтрокиТабличнойЧасти);
		Результат.Вставить("Обработчик_ПослеЗаполненияСтрокиТабличнойЧасти",  Обработчик_ПослеЗаполненияСтрокиТабличнойЧасти);
		Результат.Вставить("Обработчик_ПослеЗаполненияТабличнойЧасти",        Обработчик_ПослеЗаполненияТабличнойЧасти);
	КонецЕсли;
	
	Закрыть(Результат);
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиТабличногоПоляФормы

Процедура ТаблицаРеквизитовПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		ОформлениеСтроки.Ячейки.ИмяЗначениеПриемника.Видимость = Ложь;
		ОформлениеСтроки.Ячейки.ИмяПриемника.Видимость = ОформлениеСтроки.ДанныеСтроки.ТипПриемника = "НовыйРеквизит";
		ОформлениеСтроки.Ячейки.Загружать.ТолькоПросмотр = ОформлениеСтроки.ДанныеСтроки.ТипПриемника = "НовыйРеквизит";
		ОформлениеСтроки.Ячейки.СинонимПриемника.Видимость = НЕ ОформлениеСтроки.Ячейки.ИмяПриемника.Видимость;
		
		ОформлениеСтроки.Ячейки.ИмяЗначениеИсточника.Видимость = Ложь;
		ОформлениеСтроки.Ячейки.ЗначениеИсточника.Видимость = ОформлениеСтроки.ДанныеСтроки.ТипИсточника = "ПроизвольноеЗначение";
		ОформлениеСтроки.Ячейки.СинонимИсточника.Видимость = НЕ ОформлениеСтроки.Ячейки.ЗначениеИсточника.Видимость;
		ОформлениеСтроки.Ячейки.СпособСопоставленияСиноним.ТолькоПросмотр = НЕ ОформлениеСтроки.ДанныеСтроки.ТипИсточника = "РеквизитMS";
		
		Если ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.ПравилоПоиска) 
			 ИЛИ ОформлениеСтроки.ДанныеСтроки.СпособСопоставления = "ПодборКоличества" Тогда
			ОформлениеСтроки.Ячейки.Группировать.ТолькоПросмотр = Истина;
		КонецЕсли;
		
		Если (ОформлениеСтроки.ДанныеСтроки.ТипИсточника <> "РеквизитMS" И ОформлениеСтроки.ДанныеСтроки.ТипИсточника <> "ВычислимоеПоле")
			 ИЛИ ОформлениеСтроки.ДанныеСтроки.СпособСопоставления = "ПодборКоличества" Тогда
			ОформлениеСтроки.Ячейки.ПравилоПоискаСиноним.ТолькоПросмотр = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ТаблицаРеквизитовТипПриемникаСинонимПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ТаблицаРеквизитов.ТекущиеДанные;
	НайденныйЭлементСписка = СписокТиповПриемника.НайтиПоЗначению(Элемент.Значение);
	
	ТекущаяСтрока.ТипПриемникаСиноним = НайденныйЭлементСписка.Представление;
	Если НайденныйЭлементСписка <> Неопределено И НайденныйЭлементСписка.Значение <> ПредыдущееЗначение Тогда
		ТекущаяСтрока.ТипПриемника = НайденныйЭлементСписка.Значение;
		ТекущаяСтрока.СинонимПриемника = "";
		ТекущаяСтрока.ИмяПриемника = "";
		Если ТекущаяСтрока.ТипПриемника = "НовыйРеквизит" Тогда
			ТекущаяСтрока.Загружать = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаРеквизитовТипПриемникаСинонимНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	ТекущаяСтрока = ЭлементыФормы.ТаблицаРеквизитов.ТекущиеДанные;
	ПредыдущееЗначение = ТекущаяСтрока.ТипПриемника;
	
КонецПроцедуры

Процедура ТаблицаРеквизитовСинонимПриемникаПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ТаблицаРеквизитов.ТекущиеДанные;
	
	НайденныйЭлементСписка = Неопределено;
	Если ТекущаяСтрока.ТипПриемника = "Реквизит1С" Тогда
		НайденныйЭлементСписка = СписокРеквизитов1С.НайтиПоЗначению(Элемент.Значение);
	КонецЕсли;
	
	Если НайденныйЭлементСписка = Неопределено Тогда
		ТекущаяСтрока.ИмяПриемника = "";
	Иначе
		ТекущаяСтрока.СинонимПриемника = НайденныйЭлементСписка.Представление;
		ТекущаяСтрока.ИмяПриемника = НайденныйЭлементСписка.Значение;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаРеквизитовСинонимПриемникаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	ТекущаяСтрока = ЭлементыФормы.ТаблицаРеквизитов.ТекущиеДанные;
	ПредыдущееЗначение = ТекущаяСтрока.ИмяИсточника;
	
КонецПроцедуры

Процедура ТаблицаРеквизитовТипИсточникаСинонимПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ТаблицаРеквизитов.ТекущиеДанные;
	НайденныйЭлементСписка = СписокТиповИсточника.НайтиПоЗначению(Элемент.Значение);
	
	Если НайденныйЭлементСписка <> Неопределено И НайденныйЭлементСписка.Значение <> ПредыдущееЗначение Тогда
		ТекущаяСтрока.ТипИсточникаСиноним = НайденныйЭлементСписка.Представление;
		ТекущаяСтрока.ТипИсточника = НайденныйЭлементСписка.Значение;
		ТекущаяСтрока.СинонимИсточника = "";
		ТекущаяСтрока.ИмяИсточника = "";
		ТекущаяСтрока.ЗначениеИсточника = Неопределено;
	КонецЕсли;
	
	// Способ сопоставления
	Если ТекущаяСтрока.ТипИсточника = "РеквизитMS" Тогда
		ТекущаяСтрока.СпособСопоставления = "";
		ТекущаяСтрока.СпособСопоставленияСиноним = "";
	Иначе
		ТекущаяСтрока.СпособСопоставления = "КакЕсть";
		ТекущаяСтрока.СпособСопоставленияСиноним = "Как есть (любой тип)";
	КонецЕсли;
	
	// Правило поиска
	Если ТекущаяСтрока.ТипИсточника <> "РеквизитMS" И ТекущаяСтрока.ТипИсточника <> "ВычислимоеПоле" Тогда
		ТекущаяСтрока.ПравилоПоиска = "";
		ТекущаяСтрока.ПравилоПоискаСиноним = "";
	КонецЕсли;
	
	ТекущаяСтрока.ОбработчикПодбораКоличества = "";
	
КонецПроцедуры

Процедура ТаблицаРеквизитовТипИсточникаСинонимНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	ТекущаяСтрока = ЭлементыФормы.ТаблицаРеквизитов.ТекущиеДанные;
	ПредыдущееЗначение = ТекущаяСтрока.ТипИсточника;
	
КонецПроцедуры

Процедура ТаблицаРеквизитовСинонимИсточникаПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ТаблицаРеквизитов.ТекущиеДанные;
	
	Если ТекущаяСтрока.ТипИсточника = "ПроизвольноеЗначение" Тогда
		ТекущаяСтрока.СинонимИсточника = "";
		ТекущаяСтрока.ИмяИсточника = "";
	Иначе	
		НайденныйЭлементСписка = Неопределено;
		Если ТекущаяСтрока.ТипИсточника = "РеквизитMS" Тогда
			НайденныйЭлементСписка = СписокРеквизитовMS.НайтиПоЗначению(Элемент.Значение);
		ИначеЕсли ТекущаяСтрока.ТипИсточника = "ВычислимоеПоле" Тогда
			НайденныйЭлементСписка = СписокВычислимыхПолей.НайтиПоЗначению(Элемент.Значение);
		ИначеЕсли ТекущаяСтрока.ТипИсточника = "ПроизвольныйКод" Тогда
			НайденныйЭлементСписка = СписокПроизвольныхКодов.НайтиПоЗначению(Элемент.Значение);
		ИначеЕсли ТекущаяСтрока.ТипИсточника = "ГлобальныйПараметр" Тогда
			НайденныйЭлементСписка = СписокГлобальныхПараметров.НайтиПоЗначению(Элемент.Значение);
		КонецЕсли;
		Если НайденныйЭлементСписка = Неопределено Тогда
			ТекущаяСтрока.СинонимИсточника = "";
			ТекущаяСтрока.ИмяИсточника = "";
			ТекущаяСтрока.ЗначениеИсточника = Неопределено;
		Иначе
			Если НайденныйЭлементСписка.Значение = ПредыдущееЗначение Тогда
				ТекущаяСтрока.СинонимИсточника = НайденныйЭлементСписка.Представление;
			Иначе
				ТекущаяСтрока.СинонимИсточника = НайденныйЭлементСписка.Представление;
				ТекущаяСтрока.ИмяИсточника = НайденныйЭлементСписка.Значение;
				ТекущаяСтрока.ЗначениеИсточника = Неопределено;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаРеквизитовСинонимИсточникаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ТекущаяСтрока = ЭлементыФормы.ТаблицаРеквизитов.ТекущиеДанные;
	
	Если ТекущаяСтрока.ТипИсточника = "ПроизвольныйКод" Тогда
		
		ПредыдущееЗначение = ТекущаяСтрока.ИмяИсточника;
		
		ФормаВыбора = ПолучитьФорму("ФормаСписка_ПроизвольныеКоды", ЭтаФорма, ЭтаФорма);
		ФормаВыбора._ЛокКонтекст = _ЛокКонтекст;
		ФормаВыбора.КлючНастройки = КлючНастройки;
		ФормаВыбора.ТипИсходногоДокумента1С = ТипДокумента1С;
		ФормаВыбора.ИмяТабличнойЧасти1С = ИмяТабличнойЧасти1С;
		Если КлючНастройки = "Загрузка_ШапкаДокумента" Тогда
			ФормаВыбора.ПравилаОбменаШапка = ТаблицаРеквизитов.Скопировать();
			ФормаВыбора.ПравилаОбменаТабличнаяЧасть = ТаблицаРеквизитовДополнительная;
		ИначеЕсли КлючНастройки = "Загрузка_ТабличнаяЧастьДокумента" Тогда
			ФормаВыбора.ПравилаОбменаШапка = ТаблицаРеквизитовДополнительная;
			ФормаВыбора.ПравилаОбменаТабличнаяЧасть = ТаблицаРеквизитов.Скопировать();
		КонецЕслИ;
		
		ВыбранноеЗначение = ФормаВыбора.ОткрытьМодально();
		ОбновитьСписокПроизвольныхКодов();
		
		Если ВыбранноеЗначение = Неопределено Тогда
			НайденныйЭлементСписка = СписокПроизвольныхКодов.НайтиПоЗначению(ПредыдущееЗначение);
		Иначе 
			НайденныйЭлементСписка = СписокПроизвольныхКодов.НайтиПоЗначению(ВыбранноеЗначение);
		КонецЕсли;
		
		Если НайденныйЭлементСписка = Неопределено Тогда
			ТекущаяСтрока.ИмяИсточника = "";
			ТекущаяСтрока.СинонимИсточника = "";
		Иначе
			ТекущаяСтрока.ИмяИсточника = НайденныйЭлементСписка.Значение;
			ТекущаяСтрока.СинонимИсточника = НайденныйЭлементСписка.Представление;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаРеквизитовСинонимИсточникаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Элемент.СписокВыбора.Очистить();	
	
	ТекущаяСтрока = ЭлементыФормы.ТаблицаРеквизитов.ТекущиеДанные;
	ПредыдущееЗначение = ТекущаяСтрока.ИмяИсточника;
	
	Если ТекущаяСтрока.ТипИсточника = "РеквизитMS" Тогда
		Элемент.СписокВыбора = СписокРеквизитовMS.Скопировать();
	ИначеЕсли ТекущаяСтрока.ТипИсточника = "ПроизвольныйКод" Тогда
		Элемент.СписокВыбора = СписокПроизвольныхКодов.Скопировать();
	ИначеЕсли ТекущаяСтрока.ТипИсточника = "ВычислимоеПоле" Тогда
		Элемент.СписокВыбора = СписокВычислимыхПолей.Скопировать();
	ИначеЕсли ТекущаяСтрока.ТипИсточника = "ГлобальныйПараметр" Тогда
		Элемент.СписокВыбора = СписокГлобальныхПараметров.Скопировать();
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаРеквизитовСпособСопоставленияСинонимПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ТаблицаРеквизитов.ТекущиеДанные;
	
	Если Элемент.Значение = "ПодборКоличества" Тогда
		ИмяОбработчикаПодбораКоличества = _ЛокКонтекст.ЛокЯдро_ПолучитьУниверсальноеИмяОбработчика("ПодборКоличества", ТипДокумента1С);
		РезультатПроверки = ПроверитьДоступностьОбработчика(ИмяОбработчикаПодбораКоличества, ТекущаяСтрока.ИмяПриемника);
		Если РезультатПроверки.Статус Тогда
			ТекущаяСтрока.ОбработчикПодбораКоличества = ИмяОбработчикаПодбораКоличества;
			НайденныйЭлементСписка = СписокСпособовСопоставления.НайтиПоЗначению(Элемент.Значение);
		Иначе
			ТекущаяСтрока.ОбработчикПодбораКоличества = "";
			НайденныйЭлементСписка = СписокСпособовСопоставления.НайтиПоЗначению(ПредыдущееЗначение);
		КонецЕсли;
		Сообщить(РезультатПроверки.Сообщение);
		ТекущаяСтрока.ПравилоПоиска = "";
		ТекущаяСтрока.ПравилоПоискаСиноним = "";
		ТекущаяСтрока.Группировать = Ложь;
	Иначе
		ТекущаяСтрока.ОбработчикПодбораКоличества = "";
		НайденныйЭлементСписка = СписокСпособовСопоставления.НайтиПоЗначению(Элемент.Значение);
	КонецЕсли;
	
	ТекущаяСтрока.СпособСопоставления = НайденныйЭлементСписка.Значение;
	ТекущаяСтрока.СпособСопоставленияСиноним = НайденныйЭлементСписка.Представление;
	
КонецПроцедуры

Процедура ТаблицаРеквизитовСпособСопоставленияСинонимНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	ТекущаяСтрока = ЭлементыФормы.ТаблицаРеквизитов.ТекущиеДанные;
	ПредыдущееЗначение = ТекущаяСтрока.СпособСопоставления;
	
КонецПроцедуры

Процедура ТаблицаРеквизитовПравилоПоискаСинонимПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ТаблицаРеквизитов.ТекущиеДанные;
	НайденныйЭлементСписка = СписокПравилПоиска.НайтиПоЗначению(Элемент.Значение);
	
	Если НайденныйЭлементСписка <> Неопределено И НайденныйЭлементСписка.Значение <> ПредыдущееЗначение Тогда
		ТекущаяСтрока.ПравилоПоискаСиноним = НайденныйЭлементСписка.Представление;
		ТекущаяСтрока.ПравилоПоиска = НайденныйЭлементСписка.Значение;
	КонецЕсли;
	
	// Группировка
	Если ЗначениеЗаполнено(ТекущаяСтрока.ПравилоПоиска) Тогда
		ТекущаяСтрока.Группировать = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаРеквизитовПравилоПоискаСинонимОчистка(Элемент, СтандартнаяОбработка)
	
	ТекущаяСтрока = ЭлементыФормы.ТаблицаРеквизитов.ТекущиеДанные;

	ТекущаяСтрока.ПравилоПоискаСиноним = "";
	ТекущаяСтрока.ПравилоПоиска = "";
	
КонецПроцедуры

Процедура КомПанельТаблицыУдалитьВсеНастройки(Кнопка)
	ТаблицаРеквизитов.Очистить();
КонецПроцедуры

Процедура КомПанельТаблицыЗагрузитьНастройкиПоУмолчанию(Кнопка)
	
	ЗагрузитьНастройкиПоУмолчанию();	
	
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеМеханизмы

Процедура ОбновитьСписокПроизвольныхКодов()
	
	СписокПроизвольныхКодов.Очистить();
	
	ТаблицаПроизвольныхКодов = _ЛокКонтекст.ЛокЯдро_ПолучитьИзКэшаНастройкуSMARTS("ПроизвольныеКоды_" + КлючНастройки);
	Если ТаблицаПроизвольныхКодов <> Ложь И ТипЗнч(ТаблицаПроизвольныхКодов) = Тип("ТаблицаЗначений") Тогда
		Для Каждого СтрокаТЗ Из ТаблицаПроизвольныхКодов Цикл
			СписокПроизвольныхКодов.Добавить(СтрокаТЗ.ID_ПроизвольногоКода, СтрокаТЗ.Наименование);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьДоступностьОбработчика(ИмяОбработчика, ИмяПоля)
	
	СтруктураПараметров = Новый Структура("ПодборКоличества_Колонка1С", ИмяПоля);
	
	Возврат _ЛокКонтекст.ЛокЯдро_ПроверитьДоступностьОбработчика(ИмяОбработчика, СтруктураПараметров);
	
КонецФункции

Процедура ЗагрузитьНастройкиПоУмолчанию()

	Если ТаблицаРеквизитов.Количество() Тогда
		
		Ответ = Вопрос("Текущие настройки будут утеряны! Перезаписать их?", РежимДиалогаВопрос.ДаНет, , , "Внимание");
	
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ТаблицаРеквизитов.Очистить();
		Иначе
			Возврат;
		КонецЕсли;					
		
	КонецЕсли;	
	 
	Если КлючНастройки = "Загрузка_ШапкаДокумента" Тогда // заполнить реквизиты шапки
		
		// ************************** ИдКонтрагента -> Контрагент ***************************************
		
		Если СписокРеквизитов1С.НайтиПоЗначению("Контрагент") <> Неопределено
			И СписокРеквизитовMS.НайтиПоЗначению("ИдКонтрагента") <> Неопределено Тогда
			
			НоваяСтрока = ТаблицаРеквизитов.Добавить();
			
			НоваяСтрока.Загружать 					= Истина;
			
			НоваяСтрока.ТипПриемника				= "Реквизит1С";		
			НоваяСтрока.ТипПриемникаСиноним 		= "Фиксированный реквизит 1С";				
			НоваяСтрока.ИмяПриемника 				= "Контрагент";
			НоваяСтрока.СинонимПриемника 			= "Контрагент";
			НоваяСтрока.ИмяЗначениеПриемника 		= "";
			
			НоваяСтрока.ТипИсточника 				= "РеквизитMS";
			НоваяСтрока.ТипИсточникаСиноним			= "РеквизитMS";
			НоваяСтрока.ИмяИсточника 				= "ИдКонтрагента";
			НоваяСтрока.СинонимИсточника 			= "ИдКонтрагента";		
			НоваяСтрока.ИмяЗначениеИсточника 		= "";		
			НоваяСтрока.ЗначениеИсточника			= "";		
			
			НоваяСтрока.СпособСопоставления			= "СтрокаGUID";		
			НоваяСтрока.СпособСопоставленияСиноним 	= "Поиск по GUID";
			
			НоваяСтрока.ПравилоПоиска			 	= "";
			НоваяСтрока.ПравилоПоискаСиноним		= "";
			НоваяСтрока.ОчищатьПередЗагрузкой		= Ложь;
			НоваяСтрока.Группировать				= Ложь;
			НоваяСтрока.ОбработчикПодбораКоличества	= "";
			
			НоваяСтрока.Комментарий 				= "";							
			
		КонецЕсли;
		
		// ************************** ИдСклада1С -> Склад ***************************************
		
		Если (СписокРеквизитов1С.НайтиПоЗначению("Склад") <> Неопределено ИЛИ СписокРеквизитов1С.НайтиПоЗначению("СкладОрдер") <> Неопределено)
			И СписокРеквизитовMS.НайтиПоЗначению("ИдСклада1С") <> Неопределено Тогда		
		
			НоваяСтрока = ТаблицаРеквизитов.Добавить();
			
			НоваяСтрока.Загружать 					= Истина;
			
			НоваяСтрока.ТипПриемника				= "Реквизит1С";		
			НоваяСтрока.ТипПриемникаСиноним 		= "Фиксированный реквизит 1С";				
			
			Если СписокРеквизитов1С.НайтиПоЗначению("Склад") <> Неопределено Тогда
				НоваяСтрока.ИмяПриемника 			= "Склад";
				НоваяСтрока.СинонимПриемника 		= "Склад";
			ИначеЕсли СписокРеквизитов1С.НайтиПоЗначению("СкладОрдер") <> Неопределено Тогда	
				НоваяСтрока.ИмяПриемника 			= "СкладОрдер";
				НоваяСтрока.СинонимПриемника 		= "Склад-ордер";
			КонецЕсли;
			
			НоваяСтрока.ИмяЗначениеПриемника 		= "";
			
			НоваяСтрока.ТипИсточника 				= "РеквизитMS";
			НоваяСтрока.ТипИсточникаСиноним			= "РеквизитMS";
			НоваяСтрока.ИмяИсточника 				= "ИдСклада1С";
			НоваяСтрока.СинонимИсточника 			= "ИдСклада1С";		
			НоваяСтрока.ИмяЗначениеИсточника 		= "";		
			НоваяСтрока.ЗначениеИсточника			= "";		
			
			НоваяСтрока.СпособСопоставления			= "СтрокаGUID";		
			НоваяСтрока.СпособСопоставленияСиноним 	= "Поиск по GUID";
			
			НоваяСтрока.ПравилоПоиска			 	= "";
			НоваяСтрока.ПравилоПоискаСиноним		= "";
			НоваяСтрока.ОчищатьПередЗагрузкой		= Ложь;
			НоваяСтрока.Группировать				= Ложь;
			НоваяСтрока.ОбработчикПодбораКоличества	= "";
			
			НоваяСтрока.Комментарий 				= "";		
		
		КонецЕсли;
		
		// ************************** ИдСклада1СОткуда -> СкладОтправитель ***************************************
		
		Если СписокРеквизитов1С.НайтиПоЗначению("СкладОтправитель") <> Неопределено
			И СписокРеквизитовMS.НайтиПоЗначению("ИдСклада1СОткуда") <> Неопределено Тогда
			
			НоваяСтрока = ТаблицаРеквизитов.Добавить();
			
			НоваяСтрока.Загружать 					= Истина;
			
			НоваяСтрока.ТипПриемника				= "Реквизит1С";		
			НоваяСтрока.ТипПриемникаСиноним 		= "Фиксированный реквизит 1С";				
			НоваяСтрока.ИмяПриемника 				= "СкладОтправитель";
			НоваяСтрока.СинонимПриемника 			= "Склад отправитель";
			НоваяСтрока.ИмяЗначениеПриемника 		= "";
			
			НоваяСтрока.ТипИсточника 				= "РеквизитMS";
			НоваяСтрока.ТипИсточникаСиноним			= "РеквизитMS";
			НоваяСтрока.ИмяИсточника 				= "ИдСклада1СОткуда";
			НоваяСтрока.СинонимИсточника 			= "ИдСклада1СОткуда";		
			НоваяСтрока.ИмяЗначениеИсточника 		= "";		
			НоваяСтрока.ЗначениеИсточника			= "";		
			
			НоваяСтрока.СпособСопоставления			= "СтрокаGUID";		
			НоваяСтрока.СпособСопоставленияСиноним 	= "Поиск по GUID";
			
			НоваяСтрока.ПравилоПоиска			 	= "";
			НоваяСтрока.ПравилоПоискаСиноним		= "";
			НоваяСтрока.ОчищатьПередЗагрузкой		= Ложь;
			НоваяСтрока.Группировать				= Ложь;
			НоваяСтрока.ОбработчикПодбораКоличества	= "";
			
			НоваяСтрока.Комментарий 				= "";							
			
		КонецЕсли;		
		
		// ************************** ИдСклада1СКуда -> СкладПолучатель ***************************************
		
		Если СписокРеквизитов1С.НайтиПоЗначению("СкладПолучатель") <> Неопределено
			И СписокРеквизитовMS.НайтиПоЗначению("ИдСклада1СКуда") <> Неопределено Тогда
			
			НоваяСтрока = ТаблицаРеквизитов.Добавить();
			
			НоваяСтрока.Загружать 					= Истина;
			
			НоваяСтрока.ТипПриемника				= "Реквизит1С";		
			НоваяСтрока.ТипПриемникаСиноним 		= "Фиксированный реквизит 1С";				
			НоваяСтрока.ИмяПриемника 				= "СкладПолучатель";
			НоваяСтрока.СинонимПриемника 			= "Склад получатель";
			НоваяСтрока.ИмяЗначениеПриемника 		= "";
			
			НоваяСтрока.ТипИсточника 				= "РеквизитMS";
			НоваяСтрока.ТипИсточникаСиноним			= "РеквизитMS";
			НоваяСтрока.ИмяИсточника 				= "ИдСклада1СКуда";
			НоваяСтрока.СинонимИсточника 			= "ИдСклада1СКуда";		
			НоваяСтрока.ИмяЗначениеИсточника 		= "";		
			НоваяСтрока.ЗначениеИсточника			= "";		
			
			НоваяСтрока.СпособСопоставления			= "СтрокаGUID";		
			НоваяСтрока.СпособСопоставленияСиноним 	= "Поиск по GUID";
			
			НоваяСтрока.ПравилоПоиска			 	= "";
			НоваяСтрока.ПравилоПоискаСиноним		= "";
			НоваяСтрока.ОчищатьПередЗагрузкой		= Ложь;
			НоваяСтрока.Группировать				= Ложь;
			НоваяСтрока.ОбработчикПодбораКоличества	= "";
			
			НоваяСтрока.Комментарий 				= "";							
			
		КонецЕсли;		
		
	ИначеЕсли КлючНастройки = "Загрузка_ТабличнаяЧастьДокумента" Тогда // заполнить реквизиты ТЧ
		
		// ************************** ИдТовара -> Номенклатура ***************************************
		
		Если СписокРеквизитов1С.НайтиПоЗначению("Номенклатура") <> Неопределено
			И СписокРеквизитовMS.НайтиПоЗначению("ИдТовара") <> Неопределено Тогда
			
			НоваяСтрока = ТаблицаРеквизитов.Добавить();
			
			НоваяСтрока.Загружать 					= Истина;
			
			НоваяСтрока.ТипПриемника				= "Реквизит1С";		
			НоваяСтрока.ТипПриемникаСиноним 		= "Фиксированный реквизит 1С";				
			НоваяСтрока.ИмяПриемника 				= "Номенклатура";
			НоваяСтрока.СинонимПриемника 			= "Номенклатура";
			НоваяСтрока.ИмяЗначениеПриемника 		= "";
			
			НоваяСтрока.ТипИсточника 				= "ВычислимоеПоле";
			НоваяСтрока.ТипИсточникаСиноним			= "Вычислимое поле";
			НоваяСтрока.ИмяИсточника 				= "Номенклатура";
			НоваяСтрока.СинонимИсточника 			= "Номенклатура (выч. поле)";		
			НоваяСтрока.ИмяЗначениеИсточника 		= "";		
			НоваяСтрока.ЗначениеИсточника			= "";		
			
			НоваяСтрока.СпособСопоставления			= "КакЕсть";		
			НоваяСтрока.СпособСопоставленияСиноним 	= "Как есть (любой тип)";
			
			НоваяСтрока.ПравилоПоиска			 	= "Равно";
			НоваяСтрока.ПравилоПоискаСиноним		= "Равно или оба пустые";
			НоваяСтрока.ОчищатьПередЗагрузкой		= Ложь;
			НоваяСтрока.Группировать				= Истина;
			НоваяСтрока.ОбработчикПодбораКоличества	= "";
			
			НоваяСтрока.Комментарий 				= "";							
			
		КонецЕсли;		
		
		// ************************** ИдЕдиницыИзмерения -> ЕдиницаИзмерения ***************************************
		
		Если СписокРеквизитов1С.НайтиПоЗначению("ЕдиницаИзмерения") <> Неопределено
			И СписокРеквизитовMS.НайтиПоЗначению("ИдЕдиницыИзмерения") <> Неопределено Тогда
			
			НоваяСтрока = ТаблицаРеквизитов.Добавить();
			
			НоваяСтрока.Загружать 					= Истина;
			
			НоваяСтрока.ТипПриемника				= "Реквизит1С";		
			НоваяСтрока.ТипПриемникаСиноним 		= "Фиксированный реквизит 1С";				
			НоваяСтрока.ИмяПриемника 				= "ЕдиницаИзмерения";
			НоваяСтрока.СинонимПриемника 			= "Единица измерения";
			НоваяСтрока.ИмяЗначениеПриемника 		= "";
			
			НоваяСтрока.ТипИсточника 				= "ВычислимоеПоле";
			НоваяСтрока.ТипИсточникаСиноним			= "Вычислимое поле";
			НоваяСтрока.ИмяИсточника 				= "ЕдиницаИзмерения";
			НоваяСтрока.СинонимИсточника 			= "Единица измерения (выч. поле)";		
			НоваяСтрока.ИмяЗначениеИсточника 		= "";		
			НоваяСтрока.ЗначениеИсточника			= "";		
			
			НоваяСтрока.СпособСопоставления			= "КакЕсть";		
			НоваяСтрока.СпособСопоставленияСиноним 	= "Как есть (любой тип)";
			
			НоваяСтрока.ПравилоПоиска			 	= "Равно";
			НоваяСтрока.ПравилоПоискаСиноним		= "Равно или оба пустые";
			НоваяСтрока.ОчищатьПередЗагрузкой		= Ложь;
			НоваяСтрока.Группировать				= Истина;
			НоваяСтрока.ОбработчикПодбораКоличества	= "";
			
			НоваяСтрока.Комментарий 				= "";							
			
		КонецЕсли;		
		
		// ************************** ИдЕдиницыИзмерения -> ЕдиницаИзмеренияМест ***************************************
		
		Если СписокРеквизитов1С.НайтиПоЗначению("ЕдиницаИзмеренияМест") <> Неопределено
			И СписокРеквизитовMS.НайтиПоЗначению("ИдЕдиницыИзмерения") <> Неопределено Тогда
			
			НоваяСтрока = ТаблицаРеквизитов.Добавить();
			
			НоваяСтрока.Загружать 					= Истина;
			
			НоваяСтрока.ТипПриемника				= "Реквизит1С";		
			НоваяСтрока.ТипПриемникаСиноним 		= "Фиксированный реквизит 1С";				
			НоваяСтрока.ИмяПриемника 				= "ЕдиницаИзмеренияМест";
			НоваяСтрока.СинонимПриемника 			= "Ед. мест";
			НоваяСтрока.ИмяЗначениеПриемника 		= "";
			
			НоваяСтрока.ТипИсточника 				= "ВычислимоеПоле";
			НоваяСтрока.ТипИсточникаСиноним			= "Вычислимое поле";
			НоваяСтрока.ИмяИсточника 				= "ЕдиницаИзмерения";
			НоваяСтрока.СинонимИсточника 			= "Единица измерения (выч. поле)";		
			НоваяСтрока.ИмяЗначениеИсточника 		= "";		
			НоваяСтрока.ЗначениеИсточника			= "";		
			
			НоваяСтрока.СпособСопоставления			= "КакЕсть";		
			НоваяСтрока.СпособСопоставленияСиноним 	= "Как есть (любой тип)";
			
			НоваяСтрока.ПравилоПоиска			 	= "РавноПусто1С";
			НоваяСтрока.ПравилоПоискаСиноним		= "Равно или в 1С пусто";
			НоваяСтрока.ОчищатьПередЗагрузкой		= Ложь;
			НоваяСтрока.Группировать				= Истина;
			НоваяСтрока.ОбработчикПодбораКоличества	= "";
			
			НоваяСтрока.Комментарий 				= "";							
			
		КонецЕсли;		
		
		// ********************* ИдХарактеристики -> ХарактеристикаНоменклатуры *****************************
		
		Если СписокРеквизитов1С.НайтиПоЗначению("ХарактеристикаНоменклатуры") <> Неопределено
			И СписокРеквизитовMS.НайтиПоЗначению("ИдХарактеристики") <> Неопределено Тогда
			
			НоваяСтрока = ТаблицаРеквизитов.Добавить();
			
			НоваяСтрока.Загружать 					= Истина;
			
			НоваяСтрока.ТипПриемника				= "Реквизит1С";		
			НоваяСтрока.ТипПриемникаСиноним 		= "Фиксированный реквизит 1С";				
			НоваяСтрока.ИмяПриемника 				= "ХарактеристикаНоменклатуры";
			НоваяСтрока.СинонимПриемника 			= "Характеристика номенклатуры";
			НоваяСтрока.ИмяЗначениеПриемника 		= "";
			
			НоваяСтрока.ТипИсточника 				= "ВычислимоеПоле";
			НоваяСтрока.ТипИсточникаСиноним			= "Вычислимое поле";
			НоваяСтрока.ИмяИсточника 				= "Характеристика";
			НоваяСтрока.СинонимИсточника 			= "Характеристика (выч. поле)";		
			НоваяСтрока.ИмяЗначениеИсточника 		= "";		
			НоваяСтрока.ЗначениеИсточника			= "";		
			
			НоваяСтрока.СпособСопоставления			= "КакЕсть";		
			НоваяСтрока.СпособСопоставленияСиноним 	= "Как есть (любой тип)";
			
			НоваяСтрока.ПравилоПоиска			 	= "Равно";
			НоваяСтрока.ПравилоПоискаСиноним		= "Равно или оба пустые";
			НоваяСтрока.ОчищатьПередЗагрузкой		= Ложь;
			НоваяСтрока.Группировать				= Истина;
			НоваяСтрока.ОбработчикПодбораКоличества	= "";
			
			НоваяСтрока.Комментарий 				= "";							
			
		КонецЕсли;								
		
		// ********************* ИдСерии -> СерияНоменклатуры *****************************
		
		Если СписокРеквизитов1С.НайтиПоЗначению("СерияНоменклатуры") <> Неопределено
			И СписокРеквизитовMS.НайтиПоЗначению("ИдСерии") <> Неопределено Тогда
			
			НоваяСтрока = ТаблицаРеквизитов.Добавить();
			
			НоваяСтрока.Загружать 					= Истина;
			
			НоваяСтрока.ТипПриемника				= "Реквизит1С";		
			НоваяСтрока.ТипПриемникаСиноним 		= "Фиксированный реквизит 1С";				
			НоваяСтрока.ИмяПриемника 				= "СерияНоменклатуры";
			НоваяСтрока.СинонимПриемника 			= "Серия номенклатуры";
			НоваяСтрока.ИмяЗначениеПриемника 		= "";
			
			НоваяСтрока.ТипИсточника 				= "ВычислимоеПоле";
			НоваяСтрока.ТипИсточникаСиноним			= "Вычислимое поле";
			НоваяСтрока.ИмяИсточника 				= "Серия";
			НоваяСтрока.СинонимИсточника 			= "Серия (выч. поле)";		
			НоваяСтрока.ИмяЗначениеИсточника 		= "";		
			НоваяСтрока.ЗначениеИсточника			= "";		
			
			НоваяСтрока.СпособСопоставления			= "КакЕсть";		
			НоваяСтрока.СпособСопоставленияСиноним 	= "Как есть (любой тип)";
			
			НоваяСтрока.ПравилоПоиска			 	= "Равно";
			НоваяСтрока.ПравилоПоискаСиноним		= "Равно или оба пустые";
			НоваяСтрока.ОчищатьПередЗагрузкой		= Ложь;
			НоваяСтрока.Группировать				= Истина;
			НоваяСтрока.ОбработчикПодбораКоличества	= "";
			
			НоваяСтрока.Комментарий 				= "";							
			
		КонецЕсли;		
		
		// ********************* КоличествоФакт -> Количество *****************************
		
		Если СписокРеквизитов1С.НайтиПоЗначению("Количество") <> Неопределено
			И СписокРеквизитовMS.НайтиПоЗначению("КоличествоФакт") <> Неопределено Тогда
			
			НоваяСтрока = ТаблицаРеквизитов.Добавить();
			
			НоваяСтрока.Загружать 					= Истина;
			
			НоваяСтрока.ТипПриемника				= "Реквизит1С";		
			НоваяСтрока.ТипПриемникаСиноним 		= "Фиксированный реквизит 1С";				
			НоваяСтрока.ИмяПриемника 				= "Количество";
			НоваяСтрока.СинонимПриемника 			= "Количество";
			НоваяСтрока.ИмяЗначениеПриемника 		= "";
			
			НоваяСтрока.ТипИсточника 				= "РеквизитMS";
			НоваяСтрока.ТипИсточникаСиноним			= "РеквизитMS";
			НоваяСтрока.ИмяИсточника 				= "КоличествоФакт";
			НоваяСтрока.СинонимИсточника 			= "КоличествоФакт";		
			НоваяСтрока.ИмяЗначениеИсточника 		= "";		
			НоваяСтрока.ЗначениеИсточника			= "";		
			
			НоваяСтрока.СпособСопоставления			= "КакЕсть";		
			НоваяСтрока.СпособСопоставленияСиноним 	= "Как есть (любой тип)";
			
			НоваяСтрока.ПравилоПоиска			 	= "";
			НоваяСтрока.ПравилоПоискаСиноним		= "";
			НоваяСтрока.ОчищатьПередЗагрузкой		= Истина;
			НоваяСтрока.Группировать				= Ложь;
			НоваяСтрока.ОбработчикПодбораКоличества	= "";
			
			НоваяСтрока.Комментарий 				= "";							
			
		КонецЕсли;		
		
		// ********************* КоличествоФакт -> КоличествоМест *****************************
		
		Если СписокРеквизитов1С.НайтиПоЗначению("КоличествоМест") <> Неопределено
			И СписокРеквизитовMS.НайтиПоЗначению("КоличествоФакт") <> Неопределено Тогда
			
			НоваяСтрока = ТаблицаРеквизитов.Добавить();
			
			НоваяСтрока.Загружать 					= Истина;
			
			НоваяСтрока.ТипПриемника				= "Реквизит1С";		
			НоваяСтрока.ТипПриемникаСиноним 		= "Фиксированный реквизит 1С";				
			НоваяСтрока.ИмяПриемника 				= "КоличествоМест";
			НоваяСтрока.СинонимПриемника 			= "Количество мест";
			НоваяСтрока.ИмяЗначениеПриемника 		= "";
			
			НоваяСтрока.ТипИсточника 				= "РеквизитMS";
			НоваяСтрока.ТипИсточникаСиноним			= "РеквизитMS";
			НоваяСтрока.ИмяИсточника 				= "КоличествоФакт";
			НоваяСтрока.СинонимИсточника 			= "КоличествоФакт";		
			НоваяСтрока.ИмяЗначениеИсточника 		= "";		
			НоваяСтрока.ЗначениеИсточника			= "";		
			
			НоваяСтрока.СпособСопоставления			= "КакЕсть";		
			НоваяСтрока.СпособСопоставленияСиноним 	= "Как есть (любой тип)";
			
			НоваяСтрока.ПравилоПоиска			 	= "";
			НоваяСтрока.ПравилоПоискаСиноним		= "";
			НоваяСтрока.ОчищатьПередЗагрузкой		= Истина;
			НоваяСтрока.Группировать				= Ложь;
			НоваяСтрока.ОбработчикПодбораКоличества	= "";
			
			НоваяСтрока.Комментарий 				= "";							
			
		КонецЕсли;
		
		// ***************************** Цена -> Цена ************************************
		
		Если СписокРеквизитов1С.НайтиПоЗначению("Цена") <> Неопределено
			И СписокРеквизитовMS.НайтиПоЗначению("Цена") <> Неопределено Тогда
			
			НоваяСтрока = ТаблицаРеквизитов.Добавить();
			
			НоваяСтрока.Загружать 					= Истина;
			
			НоваяСтрока.ТипПриемника				= "Реквизит1С";		
			НоваяСтрока.ТипПриемникаСиноним 		= "Фиксированный реквизит 1С";				
			НоваяСтрока.ИмяПриемника 				= "Цена";
			НоваяСтрока.СинонимПриемника 			= "Цена";
			НоваяСтрока.ИмяЗначениеПриемника 		= "";
			
			НоваяСтрока.ТипИсточника 				= "РеквизитMS";
			НоваяСтрока.ТипИсточникаСиноним			= "РеквизитMS";
			НоваяСтрока.ИмяИсточника 				= "Цена";
			НоваяСтрока.СинонимИсточника 			= "Цена";		
			НоваяСтрока.ИмяЗначениеИсточника 		= "";		
			НоваяСтрока.ЗначениеИсточника			= "";		
			
			НоваяСтрока.СпособСопоставления			= "КакЕсть";		
			НоваяСтрока.СпособСопоставленияСиноним 	= "Как есть (любой тип)";
			
			НоваяСтрока.ПравилоПоиска			 	= "РавноПустоТСД";
			НоваяСтрока.ПравилоПоискаСиноним		= "Равно или на ТСД пусто";
			НоваяСтрока.ОчищатьПередЗагрузкой		= Ложь;
			НоваяСтрока.Группировать				= Истина;
			НоваяСтрока.ОбработчикПодбораКоличества	= "";
			
			НоваяСтрока.Комментарий 				= "";							
			
		КонецЕсли;		
		
	КонецЕсли;	

КонецПроцедуры

#КонецОбласти
