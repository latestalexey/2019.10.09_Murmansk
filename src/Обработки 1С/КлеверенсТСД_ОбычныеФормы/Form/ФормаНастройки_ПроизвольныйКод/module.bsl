Перем РезультатРедактирования;

#Область ОбработчикиСобытийФормы

Процедура ПриОткрытии()
	
	Если ЭтоНоваяНастройка Тогда
		ID_ПроизвольногоКода = _ЛокКонтекст.ЛокЯдро_ПолучитьНовыйID("PC");
		Наименование = "НОВЫЙ ПРОИЗВОЛЬНЫЙ КОД";
		ЕстьИзмененияНаФорме = Истина;
	Иначе
		ЭлементыФормы.ТекстовыйДокумент.УстановитьТекст(ТекстПроизвольногоКода);
		ЕстьИзмененияНаФорме = Ложь;
	КонецЕсли;
	
	РезультатРедактирования = "";
	
	Если КлючНастройки = "Выгрузка_ШапкаДокумента" Тогда 
		Заголовок = Заголовок + " (Раздел: Выгрузка шапки документа)";
	ИначеЕсли КлючНастройки = "Выгрузка_ТабличнаяЧастьДокумента" Тогда 
		Заголовок = Заголовок + " (Раздел: Выгрузка табличной части документа)";
	ИначеЕсли КлючНастройки = "Загрузка_ШапкаДокумента" Тогда 
		Заголовок = Заголовок + " (Раздел: Загрузка шапки документа)";
	ИначеЕсли КлючНастройки = "Загрузка_ТабличнаяЧастьДокумента" Тогда 
		Заголовок = Заголовок + " (Раздел: Загрузка табличной части документа)";
	КонецЕсли;
	
	ЗаполнитьПолеПеременных();

КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗакрытьФормуСРезультатом();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы_ОсновныеДействия

Процедура ОсновныеДействияСохранитьИЗакрыть(Кнопка)
	СохранитьНастройку();
	Закрыть();
КонецПроцедуры

Процедура ОсновныеДействияСохранить(Кнопка)
	СохранитьНастройку();
КонецПроцедуры

Процедура ОсновныеДействияЗакрыть(Кнопка)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеМеханизмы

Процедура ЗакрытьФормуСРезультатом()
	
	ЗакрытьФорму = Истина;
	
	Если ЕстьИзмененияНаФорме Тогда 
		ТекстВопроса = "Сохранить внесенные изменения?";
		ОтветПользователя = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена,, КодВозвратаДиалога.Да, "Внимание!");
		Если ОтветПользователя = КодВозвратаДиалога.Да Тогда
			СохранитьНастройку();
		ИначеЕсли ОтветПользователя = КодВозвратаДиалога.Отмена Тогда
			ЗакрытьФорму = Ложь;
		КонецЕсли;
	КонецЕсли;
		
	Если ЗакрытьФорму Тогда
		Закрыть(РезультатРедактирования);
	КонецЕсли;
	
КонецПроцедуры

Процедура СохранитьНастройку()
	
	СтруктураНастройки = Новый Структура;
	СтруктураНастройки.Вставить("ID_ПроизвольногоКода",   ID_ПроизвольногоКода);
	СтруктураНастройки.Вставить("Наименование",           Наименование);
	СтруктураНастройки.Вставить("ТекстПроизвольногоКода", ЭлементыФормы.ТекстовыйДокумент.ПолучитьТекст());
	СтруктураНастройки.Вставить("Описание",               Описание);
	
	Отбор = Новый Структура("ID_ПроизвольногоКода", ID_ПроизвольногоКода);
	_ЛокКонтекст.ЛокЯдро_СохранитьСтрокуВТабличнойНастройкеMS("ПроизвольныеКоды_" + КлючНастройки, Отбор, СтруктураНастройки);
	
	РезультатРедактирования = ID_ПроизвольногоКода;
	ЕстьИзмененияНаФорме = Ложь;
	
КонецПроцедуры

Процедура ЗаполнитьПолеПеременных()
	
	Если КлючНастройки = "Выгрузка_ШапкаДокумента" Тогда
		ПрефиксОбласти = "ВШ_";
	ИначеЕсли КлючНастройки = "Выгрузка_ТабличнаяЧастьДокумента" Тогда
		ПрефиксОбласти = "ВТЧ_";
	ИначеЕсли КлючНастройки = "Загрузка_ШапкаДокумента" Тогда
		ПрефиксОбласти = "ЗШ_";
	ИначеЕсли КлючНастройки = "Загрузка_ТабличнаяЧастьДокумента" Тогда
		ПрефиксОбласти = "ЗТЧ_";
	КонецЕсли;
	
	МакетПеременных = _ЛокКонтекст.ЛокЯдро_ПолучитьМакетОбработки("ОписаниеПеременныхДляПроизвольныхКодов");
	
	ОбластьВывода = МакетПеременных.ПолучитьОбласть(ПрефиксОбласти + "Общие");
	ЭлементыФормы.ОписаниеПеременных.Вывести(ОбластьВывода);
	
	ОбластьВывода = МакетПеременных.ПолучитьОбласть(ПрефиксОбласти + "Шапка");
	ЭлементыФормы.ОписаниеПеременных.Вывести(ОбластьВывода);
	ВывестиПодстрокиВПолеПеременных(МакетПеременных, ПрефиксОбласти, "ПравилаОбменаШапка");
	Если ПрефиксОбласти = "ВТЧ_" ИЛИ ПрефиксОбласти = "ЗТЧ_" Тогда
		ОбластьВывода = МакетПеременных.ПолучитьОбласть(ПрефиксОбласти + "Строка");
		ЭлементыФормы.ОписаниеПеременных.Вывести(ОбластьВывода);
		ВывестиПодстрокиВПолеПеременных(МакетПеременных, ПрефиксОбласти, "ПравилаОбменаТабличнаяЧасть");
	КонецЕсли;
	
	ЭлементыФормы.ОписаниеПеременных.ФиксацияСверху = 1;
	
КонецПроцедуры

Процедура ВывестиПодстрокиВПолеПеременных(МакетПеременных, ПрефиксОбласти, ИмяТаблицы)
	
	ТаблицаДляВывода = ПолучитьТаблицуДоступныхРеквизитов(ИмяТаблицы);
	
	Если ИмяТаблицы = "ПравилаОбменаШапка" Тогда
		ИмяОбластиРеквизитов = ПрефиксОбласти + "РеквизитШапки";
	ИначеЕсли ИмяТаблицы = "ПравилаОбменаТабличнаяЧасть" Тогда
		ИмяОбластиРеквизитов = ПрефиксОбласти + "РеквизитСтроки";
	КонецЕсли;
	
	ЭлементыФормы.ОписаниеПеременных.НачатьГруппуСтрок();
	Если ТаблицаДляВывода.Количество() = 0 Тогда
		ОбластьВывода = МакетПеременных.ПолучитьОбласть(ПрефиксОбласти + "НетДанных");
		ЭлементыФормы.ОписаниеПеременных.Вывести(ОбластьВывода);
	Иначе
		НомерСтроки = 0;
		Для Каждого СтрокаРеквизита Из ТаблицаДляВывода Цикл
			НомерСтроки = НомерСтроки + 1;
			ОбластьВывода = МакетПеременных.ПолучитьОбласть(ИмяОбластиРеквизитов);
			ОбластьВывода.Параметры.Заполнить(СтрокаРеквизита);
			ОбластьВывода.Параметры.НомерСтроки = СтрЗаменить(Строка(НомерСтроки), Символы.НПП, "") + ".";
			ЭлементыФормы.ОписаниеПеременных.Вывести(ОбластьВывода);
		КонецЦикла;
	КонецЕсли;
	ЭлементыФормы.ОписаниеПеременных.ЗакончитьГруппуСтрок();
	
КонецПроцедуры

Функция ПолучитьТаблицуДоступныхРеквизитов(ИмяТаблицы)
	
	ТаблицаРезультат = Новый ТаблицаЗначений;
	ТаблицаРезультат.Колонки.Добавить("ИмяПриемника");
	ТаблицаРезультат.Колонки.Добавить("Тип");
	ТаблицаРезультат.Колонки.Добавить("Описание");
	
	ТаблицаИсточник = ЭтаФорма[ИмяТаблицы];
	
	ДобавлятьПроизвольныеКоды = Истина;
	Для Каждого СтрокаПравила Из ТаблицаИсточник Цикл
		Если ЗначениеЗаполнено(СтрокаПравила.ИмяПриемника) И ЗначениеЗаполнено(СтрокаПравила.ТипИсточника) Тогда
			Если СтрокаПравила.ТипИсточника = "Реквизит1С" И ЗначениеЗаполнено(СтрокаПравила.ИмяИсточника) Тогда
				НоваяСтрока = ТаблицаРезультат.Добавить();
				НоваяСтрока.ИмяПриемника = СтрокаПравила.ИмяПриемника;
				НоваяСтрока.Тип = "Значение реквизита 1С";
				НоваяСтрока.Описание = "Значение, загружаемое из реквизита 1С [" + СтрокаПравила.СинонимИсточника + "] по способу сопоставления [" +  СтрокаПравила.СпособСопоставленияСиноним + "].";
			ИначеЕсли СтрокаПравила.ТипИсточника = "РеквизитMS" И ЗначениеЗаполнено(СтрокаПравила.ИмяИсточника) Тогда
				НоваяСтрока = ТаблицаРезультат.Добавить();
				НоваяСтрока.ИмяПриемника = СтрокаПравила.ИмяПриемника;
				НоваяСтрока.Тип = "Значение реквизита Mobile SMARTS";
				НоваяСтрока.Описание = "Значение, загружаемое из реквизита Mobile SMARTS [" + СтрокаПравила.СинонимИсточника + "] по способу сопоставления [" +  СтрокаПравила.СпособСопоставленияСиноним + "].";
			ИначеЕсли СтрокаПравила.ТипИсточника = "ВычислимоеПоле" И ЗначениеЗаполнено(СтрокаПравила.ИмяИсточника) Тогда
				НоваяСтрока = ТаблицаРезультат.Добавить();
				НоваяСтрока.ИмяПриемника = СтрокаПравила.ИмяПриемника;
				НоваяСтрока.Тип = "Значение вычислимого поля";
				НоваяСтрока.Описание = "Значение, загружаемое из вычислимого поля [" + СтрокаПравила.СинонимИсточника + "].";
			ИначеЕсли СтрокаПравила.ТипИсточника = "ГлобальныйПараметр" И ЗначениеЗаполнено(СтрокаПравила.ИмяИсточника) Тогда
				НоваяСтрока = ТаблицаРезультат.Добавить();
				НоваяСтрока.ИмяПриемника = СтрокаПравила.ИмяПриемника;
				НоваяСтрока.Тип = "Значение глобального параметр";
				НоваяСтрока.Описание = "Значение глобального параметра [" + СтрокаПравила.СинонимИсточника + "], полученное для используемого узла.";
			ИначеЕсли СтрокаПравила.ТипИсточника = "ПроизвольноеЗначение" Тогда
				НоваяСтрока = ТаблицаРезультат.Добавить();
				НоваяСтрока.ИмяПриемника = СтрокаПравила.ИмяПриемника;
				НоваяСтрока.Тип = "Произвольное значение";
				НоваяСтрока.Описание = "Произвольное значение, установленное в правилах обмена";
			ИначеЕсли СтрокаПравила.ТипИсточника = "ПроизвольныйКод" И ДобавлятьПроизвольныеКоды И ЗначениеЗаполнено(СтрокаПравила.ИмяИсточника) Тогда
				Если СтрокаПравила.ИмяИсточника = ID_ПроизвольногоКода Тогда
					ДобавлятьПроизвольныеКоды = Ложь;	// не добавляем в таблицу коды, рассчитываемые позднее текущего
					Продолжить;
				КонецЕсли;
				НоваяСтрока = ТаблицаРезультат.Добавить();
				НоваяСтрока.ИмяПриемника = СтрокаПравила.ИмяПриемника;
				НоваяСтрока.Тип = "Произвольный код";
				НоваяСтрока.Описание = "Значение, рассчитанное по произвольному коду ["+ СтрокаПравила.СинонимИсточника +"].";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТаблицаРезультат;
	
КонецФункции

#КонецОбласти
