
#Область ОбработчикиСобытийФормы

Процедура ПриОткрытии()
	
	ЭлементыФормы.ПанельФормы.Кнопки.ОчиститьСправочник.Текст = "Очистить справочник " + ИмяТаблицы;
	ЭлементыФормы.ПанельТаблицыВыгрузки.Свертка = РежимСверткиЭлементаУправления.Низ;
	Заголовок = "Клеверенс: Настройка и выгрузка справочника " + ИмяТаблицы + " на ТСД"; 
	
	ЗаполнитьНастройкиКолонокТаблицыВыборки();
	
    ЗаполнитьНастройкиВыгрузки();
	Если Предпросмотр = Истина Тогда
		ГиперСсылкаНажатие("");
		КомПанельТаблицыВыборкиЗаполнитьТаблицу("");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

Процедура ПанельФормыСохранитьИЗакрыть(Кнопка)
	
	НастройкиКомпоновщика = КомпоновщикНастроек.ПолучитьНастройки();
	НастройкаКомпоновщикаСтрокой = ЗначениеВСтрокуВнутр(НастройкиКомпоновщика);
	
	РезультатСохранения = Новый Структура;
	РезультатСохранения.Вставить("ИмяТаблицы", ИмяТаблицы);
	РезультатСохранения.Вставить("НастройкаКомпоновщикаСтрокой", НастройкаКомпоновщикаСтрокой);
	
	Закрыть(РезультатСохранения);
	
КонецПроцедуры

Процедура ПанельФормыВыгрузитьСправочник(Кнопка)
	
	НастройкиКомпоновщика = КомпоновщикНастроек.ПолучитьНастройки();
	ПараметрыКомпоновщика = _ЛокКонтекст.ЛокЯдро_ПолучитьЗначенияГлобальныхПараметров();
	_ЛокКонтекст.ЛокЯдро_ВыгрузитьТаблицуНаСерверSMARTS(ИмяТаблицы, НастройкиКомпоновщика, ПараметрыКомпоновщика, ID_БазыSMARTS);
	
КонецПроцедуры

Процедура ПанельФормыОчиститьСправочник(Кнопка)
	_ЛокКонтекст.ЛокЯдро_ОчиститьТаблицуНаСервереSMARTS(ИмяТаблицы);
КонецПроцедуры

Процедура КомПанельКомпоновщикаОчиститьНастройки(Кнопка)
	КомпоновщикНастроек.Настройки.Отбор.Элементы.Очистить();
	НастройкаКомпоновщикаСтрокой = "";
КонецПроцедуры

Процедура ГиперСсылкаНажатие(Элемент)
	
	Если ЭлементыФормы.ПанельТаблицыВыгрузки.Свертка = РежимСверткиЭлементаУправления.Низ Тогда 
		ЭлементыФормы.ПанельТаблицыВыгрузки.Свертка = РежимСверткиЭлементаУправления.Нет;
		ЭлементыФормы.НадписьКоличествоСтрок.Видимость = Истина;
		ЭлементыФормы.КоличествоСтрок.Видимость = Истина;
	Иначе 
		ЭлементыФормы.ПанельТаблицыВыгрузки.Свертка = РежимСверткиЭлементаУправления.Низ;
		ЭлементыФормы.НадписьКоличествоСтрок.Видимость = Ложь;
		ЭлементыФормы.КоличествоСтрок.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура КомПанельТаблицыВыборкиУстановитьПометки(Кнопка)
	Если ТаблицаВыборки.Колонки.Найти("Выгружать") <> Неопределено Тогда
		ТаблицаВыборки.ЗаполнитьЗначения(Истина, "Выгружать");
	КонецЕсли;
КонецПроцедуры

Процедура КомПанельТаблицыВыборкиСнятьПометки(Кнопка)
	Если ТаблицаВыборки.Колонки.Найти("Выгружать") <> Неопределено Тогда
		ТаблицаВыборки.ЗаполнитьЗначения(Ложь, "Выгружать");
	КонецЕсли;
КонецПроцедуры

Процедура КомПанельТаблицыВыборкиВыгрузитьСправочник(Кнопка)
	
	Если НЕ ТаблицаВыборки.Количество() Тогда	
		Сообщить("Пожалуйста, сначала заполните таблицу на форме данными из 1С, нажав на кнопку ""Заполнить таблицу""");
		Возврат;
	КонецЕсли; 
	
	ТаблицаДляВыгрузки = ТаблицаВыборки.Скопировать(Новый Структура("Выгружать", Истина));
	// если оставим эту колонку, то MS не загрузит такие данные (т.е. массивы данных с колонками, которых нет в MS), НО И ОШИБКУ НЕ ВЫДАСТ!
	Если ТаблицаДляВыгрузки.Колонки.Найти("Выгружать") <> Неопределено Тогда
		ТаблицаДляВыгрузки.Колонки.Удалить("Выгружать");
	КонецЕсли;	
	_ЛокКонтекст.ЛокЯдро_ВыгрузитьПодготовленнуюТаблицуНаСерверSMARTS(ИмяТаблицы, ТаблицаДляВыгрузки, ID_БазыSMARTS);
	
КонецПроцедуры

Процедура КомПанельТаблицыВыборкиЗаполнитьТаблицу(Кнопка)
	
	НастройкиКомпоновщика = КомпоновщикНастроек.Настройки;
	ПараметрыКомпоновщика = _ЛокКонтекст.ЛокЯдро_ПолучитьЗначенияГлобальныхПараметров();
	ТаблицаВыборки = _ЛокКонтекст.ЛокЯдро_ПолучитьДанныеТаблицыДляВыгрузкиНаСерверSMARTS(ИмяТаблицы, НастройкиКомпоновщика, ПараметрыКомпоновщика);
	КоличествоСтрокВыборки = ТаблицаВыборки.Количество();
	
	УстановитьВидТаблицыВыборки();
	
КонецПроцедуры

#КонецОбласти

#Область ОбщиеАлгоритмы

Процедура ЗаполнитьНастройкиВыгрузки()  Экспорт
	
	АдресСхемыСКД = _ЛокКонтекст.ЛокЯдро_ПолучитьСхемуСКДДляВыгрузкиСправочников(ИмяТаблицы);
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыСКД));
	// сперва загружаем в компоновщик настройки СКД по умолчанию, т.е. как они заданы в конфигураторе
	// далее, если есть сохраненные настройки - загружаем их
	СхемаСКД = ПолучитьИзВременногоХранилища(АдресСхемыСКД);
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаСКД.НастройкиПоУмолчанию);
	
	Если НЕ ЗначениеЗаполнено(НастройкаКомпоновщикаСтрокой) Тогда
		Отбор = Новый Структура("ИмяТаблицы", ИмяТаблицы);
		Если  ID_Узла = _ЛокКонтекст.ДанныеТекущегоУзла.ID_Узла Тогда
			НастройкаКомпоновщикаСтрокой = _ЛокКонтекст.ЛокЯдро_ПолучитьИзКэшаЗначениеТабличнойНастройкиSMARTS("НастройкиОбменаСправочников", Отбор, "НастройкаКомпоновщикаСтрокой");	
		Иначе
			НастройкаКомпоновщикаСтрокой = _ЛокКонтекст.ЛокЯдро_ПолучитьЗначениеТабличнойНастройкиНаСервереSMARTS("НастройкиОбменаСправочников", Отбор, ID_Узла, "НастройкаКомпоновщикаСтрокой");	
		КонецЕсли;
	КонецЕсли;
	Если НЕ НастройкаКомпоновщикаСтрокой = Ложь И ЗначениеЗаполнено(НастройкаКомпоновщикаСтрокой) Тогда
		КомпоновщикНастроек.ЗагрузитьНастройки(ЗначениеИзСтрокиВнутр(НастройкаКомпоновщикаСтрокой));
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьНастройкиКолонокТаблицыВыборки()
	
	РазмерыКолонок = Новый Соответствие;
	РазмерыКолонок.Вставить("Алко", 7);
	РазмерыКолонок.Вставить("АлкоКод", 25);
	РазмерыКолонок.Вставить("АлкоКодВ", 10);
	РазмерыКолонок.Вставить("АлкоКрепость", 6);
	РазмерыКолонок.Вставить("АлкоМарк", 9);
	РазмерыКолонок.Вставить("АлкоНаим", 40);
	РазмерыКолонок.Вставить("АлкоНаимВ", 30);
	РазмерыКолонок.Вставить("АлкоОбъем", 11);
	РазмерыКолонок.Вставить("Артикул", 20);
	РазмерыКолонок.Вставить("Весовой", 10);
	РазмерыКолонок.Вставить("Выгружать", 5);
	РазмерыКолонок.Вставить("ДатаСерии", 8);
	РазмерыКолонок.Вставить("ЕстьСерии", 8);
	РазмерыКолонок.Вставить("ИмяСерии", 40);
	РазмерыКолонок.Вставить("ИмяХарактеристики", 40);
	РазмерыКолонок.Вставить("Код", 15);
	РазмерыКолонок.Вставить("Количество", 20);
	РазмерыКолонок.Вставить("Коэффициент", 9);
	РазмерыКолонок.Вставить("Номенклатура", 40);
	РазмерыКолонок.Вставить("НомерСерии", 20);
	РазмерыКолонок.Вставить("Остаток", 20);
	РазмерыКолонок.Вставить("Резерв", 20);
	РазмерыКолонок.Вставить("Родитель", 40);
	РазмерыКолонок.Вставить("ПоХарактеристикам", 10);
	РазмерыКолонок.Вставить("Серия", 40);
	РазмерыКолонок.Вставить("Упаковка", 12);
	РазмерыКолонок.Вставить("ФлагБазовойЕдиницы", 5);
	РазмерыКолонок.Вставить("Характеристика", 40);
	РазмерыКолонок.Вставить("Цена", 15);
	РазмерыКолонок.Вставить("Штрихкод", 18);
	РазмерыКолонок.Вставить("ЭтоГруппа", 8);
	РазмерыКолонок.Вставить("ЭтоПапка", 8);
	
	ЗаголовкиКолонок = Новый Соответствие;
	ЗаголовкиКолонок.Вставить("АлкоКод", "А.Код");
	ЗаголовкиКолонок.Вставить("АлкоКодВ", "А.Вид");
	ЗаголовкиКолонок.Вставить("АлкоКрепость", "А.%");
	ЗаголовкиКолонок.Вставить("АлкоМарк", "А.Марк");
	ЗаголовкиКолонок.Вставить("АлкоНаим", "А.Наименование");
	ЗаголовкиКолонок.Вставить("АлкоНаимВ", "А.Наименование вида");
	ЗаголовкиКолонок.Вставить("АлкоОбъем", "А.Объем");
	ЗаголовкиКолонок.Вставить("ВидЦены", "Вид цены");
	ЗаголовкиКолонок.Вставить("ВидЦеныВнутр", "Осн. цена");
	ЗаголовкиКолонок.Вставить("Выгружать", "");
	ЗаголовкиКолонок.Вставить("ДатаСерии", "Дата");
	ЗаголовкиКолонок.Вставить("ИмяСерии", "Наименование серии");
	ЗаголовкиКолонок.Вставить("ИмяХарактеристики", "Наименование характеристики");
	ЗаголовкиКолонок.Вставить("ЕстьСерии", "Серии");
	ЗаголовкиКолонок.Вставить("КодФормы", "А.Код формы");
	ЗаголовкиКолонок.Вставить("КонецДействия", "Конец действия");
	ЗаголовкиКолонок.Вставить("Коэффициент", "Коэфф.");
	ЗаголовкиКолонок.Вставить("НачалоДействия", "Начало действия");
	ЗаголовкиКолонок.Вставить("Номенклатура", "Наименование номенклатуры");
	ЗаголовкиКолонок.Вставить("НомерСерии", "Номер");
	ЗаголовкиКолонок.Вставить("ПоХарактеристикам", "Характ.");
	ЗаголовкиКолонок.Вставить("Серия", "Наименование серии");
	ЗаголовкиКолонок.Вставить("ФлагБазовойЕдиницы", "БЕ");
	ЗаголовкиКолонок.Вставить("Характеристика", "Наименование характеристики");
	ЗаголовкиКолонок.Вставить("ЭтоГруппа", "Папка");
	ЗаголовкиКолонок.Вставить("ЭтоПапка", "Папка");
	
	СкрываемыеКолонки = Новый Массив;
	СкрываемыеКолонки.Добавить("Ид");
	СкрываемыеКолонки.Добавить("ИдРодителя");
	СкрываемыеКолонки.Добавить("ИдНоменклатуры");
	СкрываемыеКолонки.Добавить("ИдСклада1С");
	СкрываемыеКолонки.Добавить("ИндексСорт");
	СкрываемыеКолонки.Добавить("КлючСерий");
	СкрываемыеКолонки.Добавить("КлючСерийСтрокой");
	СкрываемыеКолонки.Добавить("КлючХарактеристик");
	СкрываемыеКолонки.Добавить("КлючХарактеристикСтрокой");
	СкрываемыеКолонки.Добавить("НаименованиеДляПоиска");
	СкрываемыеКолонки.Добавить("Производитель");
	СкрываемыеКолонки.Добавить("ПроизвИНН");
	СкрываемыеКолонки.Добавить("ПроизвКПП");
	СкрываемыеКолонки.Добавить("СтатусУказанияСерий");
	Если ИмяТаблицы <> "Склады" И ИмяТаблицы <> "Контрагенты" И ИмяТаблицы <> "Остатки" Тогда
		СкрываемыеКолонки.Добавить("Наименование");
	КОнецЕсли;
	
КонецПроцедуры

Процедура УстановитьВидТаблицыВыборки()
	
	ТаблицаВыборки.Колонки.Вставить(0, "Выгружать", Новый ОписаниеТипов("Булево"), "");
	
	ЭлементыФормы.ТаблицаВыборки.СоздатьКолонки();
	Для Каждого Колонка Из ТаблицаВыборки.Колонки Цикл
		Если СкрываемыеКолонки.Найти(Колонка.Имя) <> Неопределено Тогда
			ЭлементыФормы.ТаблицаВыборки.Колонки[Колонка.Имя].Видимость = Ложь;
		КонецЕсли;
		Если Колонка.ТипЗначения.СодержитТип(Тип("Булево")) ИЛИ Колонка.Имя = "ЕстьСерии" ИЛИ Колонка.Имя = "ПоХарактеристикам" ИЛИ Колонка.Имя = "ВидЦеныВнутр" Тогда
			ЭлементыФормы.ТаблицаВыборки.Колонки[Колонка.Имя].УстановитьЭлементУправления(Тип("Флажок"));
			ЭлементыФормы.ТаблицаВыборки.Колонки[Колонка.Имя].РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
			ЭлементыФормы.ТаблицаВыборки.Колонки[Колонка.Имя].Данные = "";
			ЭлементыФормы.ТаблицаВыборки.Колонки[Колонка.Имя].ДанныеФлажка = Колонка.Имя;
		КонецЕсли;
		Если НЕ Колонка.Имя = "Выгружать" Тогда
			ЭлементыФормы.ТаблицаВыборки.Колонки[Колонка.Имя].ТолькоПросмотр = Истина;
		КонецЕсли;
		Если РазмерыКолонок.Получить(Колонка.Имя) <> Неопределено Тогда
			ЭлементыФормы.ТаблицаВыборки.Колонки[Колонка.Имя].Ширина = РазмерыКолонок.Получить(Колонка.Имя);
		КонецЕсли;
		Если ЗаголовкиКолонок.Получить(Колонка.Имя) <> Неопределено Тогда
			ЭлементыФормы.ТаблицаВыборки.Колонки[Колонка.Имя].ТекстШапки = ЗаголовкиКолонок.Получить(Колонка.Имя);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти

