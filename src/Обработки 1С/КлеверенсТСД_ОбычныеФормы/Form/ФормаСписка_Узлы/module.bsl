
#Область ОбработчикиСобытийФормы

Процедура ПриОткрытии()
	
	ОбновитьТаблицуУзлов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

Процедура КоманднаяПанельГлавнаяСохранитьВФайл(Кнопка)
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ТаблицаУзлов", ТаблицаУзлов.Скопировать());
	
	_ЛокКонтекст.ЛокЯдро_СохранитьНастройкиВФайл(СтруктураНастроек, "НастройкиУзлов");
	
КонецПроцедуры

Процедура КоманднаяПанельГлавнаяВосстановитьИзФайла(Кнопка)
	
	СтруктураНастроек = _ЛокКонтекст.ЛокЯдро_ПолучитьНастройкиИзФайла("НастройкиУзлов");
	
	Если СтруктураНастроек <> Неопределено Тогда
		_ЛокКонтекст.ЛокЯдро_ЗаполнитьФормуЗначениямиИзСтруктуры(ЭтаФорма, СтруктураНастроек);
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельГлавнаяВыгрузитьУзлы(Кнопка)
	
	ВыгрузитьУзлы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличногоПоля

Процедура ТаблицаУзловВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуРедактированияУзла(Ложь);
КонецПроцедуры

Процедура ТаблицаУзловПередНачаломДобавления(Элемент, Отказ, Копирование)
	ОткрытьФормуРедактированияУзла(Истина);
	Отказ = Истина;
КонецПроцедуры

Процедура ТаблицаУзловПередНачаломИзменения(Элемент, Отказ)
	ОткрытьФормуРедактированияУзла(Ложь);
	Отказ = Истина;
КонецПроцедуры

Процедура ТаблицаУзловПередУдалением(Элемент, Отказ)
	
	ТекущаяСтрока = Элемент.ТекущаяСтрока;
	// Очищаем настройки
	СтруктураНастроек = Новый Структура;
	Для Каждого КлючНастройки Из _ЛокКонтекст.КатегорииНастроекMS.УзловыеНастройки Цикл
		СтруктураНастроек.Вставить(КлючНастройки, Неопределено);
	КонецЦикла;
	_ЛокКонтекст.ЛокЯдро_СохранитьНастройкиВБазеSMARTS(СтруктураНастроек, ТекущаяСтрока.ID_Узла);
	_ЛокКонтекст.ЛокЯдро_ЗаписатьВКэшНастройкиSMARTS(СтруктураНастроек);
	// Удаляем строку
	ТаблицаУзлов.Удалить(ТекущаяСтрока);
	ТаблицаДляСохранения = ТаблицаУзлов.Скопировать();
	_ЛокКонтекст.ЛокЯдро_СохранитьНастройкуВБазеSMARTS("Узлы", ТаблицаДляСохранения);
	_ЛокКонтекст.ЛокЯдро_ЗаписатьВКэшНастройкуSMARTS("Узлы", ТаблицаДляСохранения);	
	ВыгрузитьУзлы();
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеМеханизмы

Процедура ОбновитьТаблицуУзлов()
	
	ТаблицаУзлов.Очистить();
	СохраненнаяТаблицаУзлов = _ЛокКонтекст.ЛокЯдро_ПолучитьИзКэшаНастройкуSMARTS("Узлы");
	Если НЕ СохраненнаяТаблицаУзлов = Ложь И ЗначениеЗаполнено(СохраненнаяТаблицаУзлов) Тогда
		Для Каждого СтрокаУзла Из СохраненнаяТаблицаУзлов Цикл
			ЗаполнитьЗначенияСвойств(ТаблицаУзлов.Добавить(), СтрокаУзла);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуРедактированияУзла(НовыйУзел)
	
	ТекущаяСтрока = ?(НовыйУзел, Неопределено, ЭлементыФормы.ТаблицаУзлов.ТекущаяСтрока);
	
	ФормаРедактирования = ПолучитьФорму("ФормаНастройки_Узел", ЭтаФорма, ЭтаФорма);
	ФормаРедактирования._ЛокКонтекст = _ЛокКонтекст;
	Если НовыйУзел Тогда
		ФормаРедактирования.ЭтоНовыйУзел = НовыйУзел;
	Иначе
		ЗаполнитьЗначенияСвойств(ФормаРедактирования, ТекущаяСтрока);
	КонецЕсли;
	
	РезультатРедактирования = ФормаРедактирования.ОткрытьМодально();
	Если РезультатРедактирования <> Неопределено Тогда
		Отбор = Новый Структура("ID_Узла", РезультатРедактирования.ID_Узла);
		_ЛокКонтекст.ЛокЯдро_СохранитьСтрокуВТабличнойНастройкеMS("Узлы", Отбор, РезультатРедактирования);		
		ОбновитьТаблицуУзлов();
		ВыгрузитьУзлы();
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыгрузитьУзлы()		
	
	Если Не _ЛокКонтекст.КомЯдро_ПроверитьСоединениеССерверомSMARTS(, Ложь) Тогда
		Если _ЛокКонтекст.ЛокЯдро_ПредложитьПользователюСохранитьНастройкиВФайл() Тогда
			КоманднаяПанельГлавнаяСохранитьВФайл("");	
		КонецЕсли;		
		Возврат;
	КонецЕсли;
	
	ПользователиТСД = Новый ТаблицаЗначений;
	
	ПользователиТСД.Колонки.Добавить("Наименование");
	ПользователиТСД.Колонки.Добавить("ID_Пользователя");
	ПользователиТСД.Колонки.Добавить("ID_Узла");
	
	Для каждого Строка Из ТаблицаУзлов Цикл
		
		ТаблицаПользователейТСД = _ЛокКонтекст.ЛокЯдро_ПолучитьНастройкуНаСервереSMARTS("ПользователиТСД", Строка.ID_Узла);
		
		Если ТипЗнч(ТаблицаПользователейТСД) = Тип("ТаблицаЗначений") Тогда
			Для Каждого СтрокаНастройки Из ТаблицаПользователейТСД Цикл
				ЗаполнитьЗначенияСвойств(ПользователиТСД.Добавить(), СтрокаНастройки);
			КонецЦикла;			
		КонецЕсли;		
		
	КонецЦикла; 			
	
	ТаблицаДляВыгрузки = Новый ТаблицаЗначений;
	
	ТаблицаДляВыгрузки.Колонки.Добавить("Ид");
	ТаблицаДляВыгрузки.Колонки.Добавить("Наименование");
	ТаблицаДляВыгрузки.Колонки.Добавить("Код");
	
	ТаблицаДляВыгрузки.Колонки.Добавить("ШК");
	ТаблицаДляВыгрузки.Колонки.Добавить("ЭтоПапка");
	ТаблицаДляВыгрузки.Колонки.Добавить("ИдРодителя");
	
	ТаблицаДляВыгрузки.Колонки.Добавить("НаименованиеДляПоиска");
	ТаблицаДляВыгрузки.Колонки.Добавить("Владелец");
	
	Для каждого Строка Из ТаблицаУзлов Цикл
	
		НоваяСтрока = ТаблицаДляВыгрузки.Добавить();
		
		НоваяСтрока.Ид 						= Строка.ID_Узла;
		НоваяСтрока.Наименование 			= Строка.Наименование;
		НоваяСтрока.Код						= Строка.ID_Узла;
		
		НоваяСтрока.ШК						= "";
		НоваяСтрока.ЭтоПапка				= Ложь;
		НоваяСтрока.ИдРодителя				= "";
		
		НоваяСтрока.НаименованиеДляПоиска 	= НРег(Строка.Наименование);
		
		ПользователиУзла = ПользователиТСД.НайтиСтроки(Новый Структура("ID_Узла", Строка.ID_Узла));
		СтрокаПользователейИГрупп = "";
		Для каждого Пользователь Из ПользователиУзла Цикл							
			СимволВНачалеСтроки = ?(СтрокаПользователейИГрупп = "", "", ",");
			СтрокаПользователейИГрупп = СтрокаПользователейИГрупп + СимволВНачалеСтроки + """" + СокрЛП(Пользователь.ID_Пользователя) + """";			
		КонецЦикла; 						
		
		НоваяСтрока.Владелец 				= СтрокаПользователейИГрупп;
		
	КонецЦикла; 
	
	МассивIDБазMS = ПолучитьМассивIDБазMS();
	
	Для каждого IDБазыMS Из МассивIDБазMS Цикл
		_ЛокКонтекст.ЛокЯдро_ВыгрузитьПодготовленнуюТаблицуНаСерверSMARTS("Узлы", ТаблицаДляВыгрузки, IDБазыMS);	
	КонецЦикла; 	
	
КонецПроцедуры

Функция ПолучитьМассивIDБазMS()
	
	Перем МассивIDБазMS;
	Перем Узел;
	Перем IDБазыMS;
	
	МассивIDБазMS = Новый Массив;
	МассивIDБазMS.Добавить(СокрЛП(ID_ТекущейБазы));
	
	Для каждого Узел Из ТаблицаУзлов Цикл
		IDБазыMS = СокрЛП(Узел.ЧастнаяБазаMS);
		Если IDБазыMS <> "" И МассивIDБазMS.Найти(IDБазыMS) = Неопределено Тогда
			МассивIDБазMS.Добавить(IDБазыMS);
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат МассивIDБазMS;
	
КонецФункции

#КонецОбласти
