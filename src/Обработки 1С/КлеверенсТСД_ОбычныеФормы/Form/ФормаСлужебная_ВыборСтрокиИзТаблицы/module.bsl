
Процедура ПриОткрытии()
	
	РежимВыбора = Истина;
	
	ЗаполнитьТаблицуВыбора();
	
	ОбщаяШирина = 0;
	Для Каждого Колонка Из ТаблицаВыбора.Колонки Цикл
		ОбщаяШирина = ОбщаяШирина + Колонка.Ширина;
	КонецЦикла;
	Ширина = Мин(1200, Макс(400, ОбщаяШирина*2)) + 20;
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуВыбора()
	
	МассивНевидимыхКолонок = Новый Массив;
	
	Если ИмяТаблицы = "БизнесПроцессыДляВыгрузки" Тогда
		
		ТаблицаВыбора.Колонки.Добавить("Название",,, 100);
		ТаблицаВыбора.Колонки.Добавить("ТипИсходногоДокумента1С_Синоним",,"Исходный документ 1С (источник)", 100);
		ТаблицаВыбора.Колонки.Добавить("ТипИсходногоДокумента1С");
		ТаблицаВыбора.Колонки.Добавить("ID_БизнесПроцесса");
		
		МассивНевидимыхКолонок.Добавить("ТипИсходногоДокумента1С");
		МассивНевидимыхКолонок.Добавить("ID_БизнесПроцесса");
		
		Если ПереданнаяТаблица = Неопределено Тогда
			ТаблицаНастроек = _ЛокКонтекст.ЛокЯдро_ПолучитьИзКэшаНастройкуSMARTS("НастройкиБизнесПроцессов");
			Если НЕ ТаблицаНастроек = Ложь Тогда
				ПереданнаяТаблица = ТаблицаНастроек.Скопировать(, "Название,ТипИсходногоДокумента1С,ID_БизнесПроцесса");
				// Удаление пустых строк
				УдалитьПустыеСтроки = ПереданнаяТаблица.НайтиСтроки(Новый Структура("ТипИсходногоДокумента1С", "")); 
				Для Каждого ПустаяСтрока Из УдалитьПустыеСтроки Цикл
					ПереданнаяТаблица.Удалить(ПустаяСтрока);
				КонецЦикла;
				// Заполнение синонимов
				ПереданнаяТаблица.Колонки.Добавить("ТипИсходногоДокумента1С_Синоним");
				Для Каждого СтрокаТаблицы Из ПереданнаяТаблица Цикл
					Если _ЛокКонтекст.СтруктураМетаданных.Документы1С.Свойство(СтрокаТаблицы.ТипИсходногоДокумента1С) Тогда
						СтрокаТаблицы.ТипИсходногоДокумента1С_Синоним = _ЛокКонтекст.СтруктураМетаданных.Документы1С[СтрокаТаблицы.ТипИсходногоДокумента1С].Синоним;
					КонецЕсли;
				КонецЦИкла;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ИмяТаблицы = "БизнесПроцессыДляЗагрузки" Тогда
		
		//ТаблицаВыбора.Колонки.Добавить("Название",,, 100);
		//ТаблицаВыбора.Колонки.Добавить("ТипРезультирующегоДокумента1С_Синоним",,"Документ 1С (приемник)", 100);
		//ТаблицаВыбора.Колонки.Добавить("ТипРезультирующегоДокумента1С");
		//ТаблицаВыбора.Колонки.Добавить("ТипДокументаMS_Синоним",,"Документ MS (источник)", 100);
		//ТаблицаВыбора.Колонки.Добавить("ТипДокументаMS");
		//ТаблицаВыбора.Колонки.Добавить("ID_БизнесПроцесса");
		//ТаблицаВыбора.Колонки.Добавить("ЗагружатьВТотЖе");
		//ТаблицаВыбора.Колонки.Добавить("СоздаватьНовыйДокументПриЗагрузке");		
		
		СтрокаПереданнойТаблицы = ПереданнаяТаблица[0];
		ТаблицаВыбора = СтрокаПереданнойТаблицы.Владелец().СкопироватьКолонки();
		
		МассивНевидимыхКолонок.Добавить("ТипРезультирующегоДокумента1С");
		МассивНевидимыхКолонок.Добавить("ТипДокументаMS");
		МассивНевидимыхКолонок.Добавить("ID_БизнесПроцесса");
		
		Если ПереданнаяТаблица = Неопределено Тогда
			ТаблицаНастроек = _ЛокКонтекст.ЛокЯдро_ПолучитьИзКэшаНастройкуSMARTS("НастройкиБизнесПроцессов");
			Если НЕ ТаблицаНастроек = Ложь Тогда
				ПереданнаяТаблица = ТаблицаНастроек.Скопировать(, "Название,ТипРезультирующегоДокумента1С,ТипДокументаMS,ID_БизнесПроцесса");
				// Заполнение синонимов
				ПереданнаяТаблица.Колонки.Добавить("ТипРезультирующегоДокумента1С_Синоним");
				ПереданнаяТаблица.Колонки.Добавить("ТипДокументаMS_Синоним");
				Для Каждого СтрокаТаблицы Из ПереданнаяТаблица Цикл
					Если _ЛокКонтекст.СтруктураМетаданных.Документы1С.Свойство(СтрокаТаблицы.ТипРезультирующегоДокумента1С) Тогда
						СтрокаТаблицы.ТипРезультирующегоДокумента1С_Синоним = _ЛокКонтекст.СтруктураМетаданных.Документы1С[СтрокаТаблицы.ТипРезультирующегоДокумента1С].Синоним;
					КонецЕсли;
					Если _ЛокКонтекст.СтруктураМетаданных.Документы1С.Свойство(СтрокаТаблицы.ТипДокументаMS) Тогда
						СтрокаТаблицы.ТипДокументаMS_Синоним = _ЛокКонтекст.СтруктураМетаданных.Документы1С[СтрокаТаблицы.ТипДокументаMS].Синоним;
					КонецЕсли;
				КонецЦИкла;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнитьТаблицуВыбораИсходнымиДанными();
	ЭлементыФормы.ТаблицаВыбора.СоздатьКолонки();
	Для Каждого ИмяКолонки Из МассивНевидимыхКолонок Цикл
		ЭлементыФормы.ТаблицаВыбора.Колонки[ИмяКолонки].Видимость = Ложь;
	КонецЦикла;
	
КонецПроцедуры

Процедура ТаблицаВыбораВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОбработатьВыбор();
КонецПроцедуры

Процедура ПанельФормыВыбрать(Кнопка)
	ОбработатьВыбор();
КонецПроцедуры

Процедура ОбработатьВыбор()
	
	ВыбраннаяСтрока = ЭлементыФормы.ТаблицаВыбора.ТекущаяСтрока;

	Если ИмяТаблицы = "БизнесПроцессыДляЗагрузки" Тогда
		Если НЕ ЗначениеЗаполнено(СокрЛП(ВыбраннаяСтрока.ТипРезультирующегоДокумента1С)) ИЛИ (ВыбраннаяСтрока.ЗагружатьВТотЖе И НЕ ЗначениеЗаполнено(СокрЛП(ВыбраннаяСтрока.ТипИсходногоДокумента1С))) Тогда
			Сообщить("Данный бизнес-процесс не подразумевает загрузку документа в 1С, т.к. у него не заполнен результирующий документ 1С");
			Возврат;
		КонецЕсли;	
	КонецЕсли;	
	
	РезультатВыбора = Новый Структура;
	Для Каждого КолонкаТЗ Из ТаблицаВыбора.Колонки Цикл
		РезультатВыбора.Вставить(КолонкаТЗ.Имя, ВыбраннаяСтрока[КолонкаТЗ.Имя]);
	КонецЦикла;
	СтруктураВыбора = Новый Структура;
	СтруктураВыбора.Вставить("Данные", РезультатВыбора);
	Закрыть(СтруктураВыбора);
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуВыбораИсходнымиДанными()
	
	Если ПереданнаяТаблица <> Неопределено И ПереданнаяТаблица <> Ложь Тогда
		Для Каждого СтрокаДанных Из ПереданнаяТаблица Цикл
			Если ИмяТаблицы = "БизнесПроцессыДляВыгрузки" Тогда
				Если ЗначениеЗаполнено(СтрокаДанных.ТипИсходногоДокумента1С) Тогда
					ЗаполнитьЗначенияСвойств(ТаблицаВыбора.Добавить(), СтрокаДанных);
				КонецЕсли;
			ИначеЕсли ИмяТаблицы = "БизнесПроцессыДляЗагрузки" Тогда	
				ЗаполнитьЗначенияСвойств(ТаблицаВыбора.Добавить(), СтрокаДанных);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры