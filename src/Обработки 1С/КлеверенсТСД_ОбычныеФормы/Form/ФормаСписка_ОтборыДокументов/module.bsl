Перем ПредыдущееЗначение;

#Область ОбработчикиСобытийФормы

Процедура ПриОткрытии()
	
	ЭтоТекущийУзел = ID_Узла = _ЛокКонтекст.ДанныеТекущегоУзла.ID_Узла;
	Если ЭтоТекущийУзел Тогда
		ЗначениеНастройки = _ЛокКонтекст.ЛокЯдро_ПолучитьИзКэшаНастройкуSMARTS("НастройкиОтборовУзлов_" + ТипОбмена);
	Иначе
		ЗначениеНастройки = _ЛокКонтекст.ЛокЯдро_ПолучитьНастройкуНаСервереSMARTS("НастройкиОтборовУзлов_" + ТипОбмена, ID_Узла);
	КонецЕсли;
	Если НЕ ЗначениеНастройки = Ложь И ЗначениеЗаполнено(ЗначениеНастройки) Тогда					
		Для Каждого СтрокаНастройки Из ЗначениеНастройки Цикл
			НоваяСтрока = НастройкиОтборов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаНастройки); 
		КонецЦикла;	
		// если колонки "Используется" не было, тогда добавляем её в настройку,
		// устанавливаем значение "Истина" и сразу сохраняем таблицу,
		// как будто все отборы сразу будут включены
		Если ЗначениеНастройки.Колонки.Найти("Используется") = Неопределено Тогда		
			НастройкиОтборов.ЗаполнитьЗначения(Истина, "Используется");
			СохранитьНастройкиОтборов();
		КонецЕсли;	
		// аналогично - для колонки "Вариант отбора"
		Если ЗначениеНастройки.Колонки.Найти("ВариантОтбора") = Неопределено Тогда		
			НастройкиОтборов.ЗаполнитьЗначения("Только конструктор", "ВариантОтбора");
			СохранитьНастройкиОтборов();
		КонецЕсли;			
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭтаФорма.НаименованиеУзла) Тогда 
		ЭтаФорма.Заголовок = "Клеверенс: Настройки отборов бизнес-процессов для магазина " + НаименованиеУзла;
		ЭлементыФормы.НадписьНаименованиеУзла.Заголовок = НаименованиеУзла;
	Иначе
		ЭтаФорма.Заголовок = "Клеверенс: Настройки отборов бизнес-процессов (глобальные)";
		ЭлементыФормы.НадписьНаименованиеУзла.Заголовок = "Все магазины";
	КонецЕсли;	
	
	Если ТипОбмена = "Онлайн" Тогда
		ЭлементыФормы.НадписьТипОбмена.ЦветТекста = WebЦвета.Зеленый;
	ИначеЕсли ТипОбмена = "Автообмен" Тогда
		ЭлементыФормы.НадписьТипОбмена.ЦветТекста = WebЦвета.Красный;
	ИначеЕсли ТипОбмена = "Интерактивный" Тогда
		ЭлементыФормы.НадписьТипОбмена.ЦветТекста = WebЦвета.Синий;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийТабличнойЧасти

Процедура НастройкиОтборовВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)	
	
	Если Колонка.Имя = "Настройка" Тогда 
		СтандартнаяОбработка = Ложь;
		ТекущаяСтрокаНастройки = ЭлементыФормы.НастройкиОтборов.ТекущаяСтрока;
		
		Если НЕ ЗначениеЗаполнено(ТекущаяСтрокаНастройки.ID_БизнесПроцесса) Тогда			
			Предупреждение("Не выбран бизнес-процесс для настройки отбора");
			Возврат;
		ИначеЕсли НЕ ЗначениеЗаполнено(ТекущаяСтрокаНастройки.ТипИсходногоДокумента1С) Тогда			
			Предупреждение("У бизнес-процесса не заполнен исходный документ 1С");
			Возврат;				
		КонецЕсли;		
		
		ФормаОтбора = ПолучитьФорму("ФормаНастройки_ОтборДокументов", ЭтаФорма, ЭтаФорма);
		ФормаОтбора.ID_Узла = ID_Узла;
		ФормаОтбора.ID_БизнесПроцесса = ТекущаяСтрокаНастройки.ID_БизнесПроцесса;
		ФормаОтбора.НаименованиеБП = ТекущаяСтрокаНастройки.Название;
		ФормаОтбора.ТипДокумента1С = ТекущаяСтрокаНастройки.ТипИсходногоДокумента1С;
		ФормаОтбора.Используется = ТекущаяСтрокаНастройки.Используется;
		ФормаОтбора.ТипОбмена = ТипОбмена;		
		ФормаОтбора.НастройкаКомпоновщикаСтрокой = ТекущаяСтрокаНастройки.НастройкаКомпоновщикаСтрокой;		
		ФормаОтбора.ВариантОтбора = ТекущаяСтрокаНастройки.ВариантОтбора;
		ФормаОтбора.ID_ПроизвольногоОтбора = ТекущаяСтрокаНастройки.ID_ПроизвольногоОтбора;
		ФормаОтбора._ЛокКонтекст = _ЛокКонтекст;
		ФормаОтбора.ЗакрыватьПриВыборе = Ложь;
		
		РезультатНастройки = ФормаОтбора.ОткрытьМодально();
		Если ЗначениеЗаполнено(РезультатНастройки) Тогда
			ТекущаяСтрокаНастройки.НастройкаКомпоновщикаСтрокой = РезультатНастройки.НастройкаКомпоновщикаСтрокой;
			ТекущаяСтрокаНастройки.Используется 				= РезультатНастройки.Используется;
			ТекущаяСтрокаНастройки.ВариантОтбора 				= РезультатНастройки.ВариантОтбора;
			ТекущаяСтрокаНастройки.ID_ПроизвольногоОтбора 		= РезультатНастройки.ID_ПроизвольногоОтбора;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура НастройкиОтборовПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		Если ЗначениеЗаполнено(ОформлениеСтроки.ДанныеСтроки.НастройкаКомпоновщикаСтрокой) Тогда			
			ОформлениеСтроки.Ячейки.Настройка.Текст = "Настроено";
		Иначе			
			ОформлениеСтроки.Ячейки.Настройка.Текст = "Настроить";
		КонецЕсли;
		ОформлениеСтроки.Ячейки.Настройка.ЦветТекста = ?(ОформлениеСтроки.ДанныеСтроки.Настройка = "Настроено", WebЦвета.Зеленый, WebЦвета.Красный);
	КонецЦикла;
	
КонецПроцедуры

Процедура НастройкиОтборовНазваниеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	
	СтрокаТабличнойЧасти = ЭлементыФормы.НастройкиОтборов.ТекущаяСтрока;
	ПредыдущееЗначение = СтрокаТабличнойЧасти.ID_БизнесПроцесса;
	
	ФормаВыбора = ПолучитьФорму("ФормаСлужебная_ВыборСтрокиИзТаблицы", ЭтаФорма, ЭтаФорма);	
	ФормаВыбора.ИмяТаблицы = "БизнесПроцессыДляВыгрузки";
	ФормаВыбора._ЛокКонтекст = _ЛокКонтекст;
	РезультатВыбора = ФормаВыбора.ОткрытьМодально();
	
	Если ЗначениеЗаполнено(РезультатВыбора) И ЗначениеЗаполнено(РезультатВыбора.Данные) Тогда
		Если НастройкиОтборов.Найти(РезультатВыбора.Данные.ID_БизнесПроцесса, "ID_БизнесПроцесса") = Неопределено Тогда
			// Изменяем строку
			Для Каждого СтрокаРезультата Из РезультатВыбора.Данные Цикл
				СтрокаТабличнойЧасти[СтрокаРезультата.Ключ] = СтрокаРезультата.Значение;
			КонецЦикла;
			Если ПредыдущееЗначение <> РезультатВыбора.Данные.ID_БизнесПроцесса Тогда
				СтрокаТабличнойЧасти.НастройкаКомпоновщикаСтрокой = "";
				СтрокаТабличнойЧасти.Настройка = "Настроить";
			КонецЕсли;
		Иначе
			Сообщить("Для выбранного бизнес-процесса уже существуют настройки отбора!");
		КонецЕсли;
	КонецЕсли;		
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовФормы

Процедура КоманднаяПанельГлавнаяСохранитьИЗакрыть(Кнопка)
	Если Не _ЛокКонтекст.КомЯдро_ПроверитьСоединениеССерверомSMARTS(, Ложь) Тогда
		Если _ЛокКонтекст.ЛокЯдро_ПредложитьПользователюСохранитьНастройкиВФайл() Тогда
			КоманднаяПанельГлавнаяСохранитьВФайл("");	
		КонецЕсли;		
		Возврат;
	КонецЕсли;
	
	СохранитьНастройкиОтборов();
	Закрыть();
КонецПроцедуры

Процедура КоманднаяПанельГлавнаяСохранить(Кнопка)
	Если Не _ЛокКонтекст.КомЯдро_ПроверитьСоединениеССерверомSMARTS(, Ложь) Тогда
		Если _ЛокКонтекст.ЛокЯдро_ПредложитьПользователюСохранитьНастройкиВФайл() Тогда
			КоманднаяПанельГлавнаяСохранитьВФайл("");	
		КонецЕсли;		
		Возврат;
	КонецЕсли;
	
	СохранитьНастройкиОтборов();
КонецПроцедуры

Процедура КоманднаяПанельГлавнаяСохранитьВФайл(Кнопка)
	
	СтруктураНастройки = Новый Структура;
	СтруктураНастройки.Вставить("НастройкиОтборов", НастройкиОтборов);
	
	_ЛокКонтекст.ЛокЯдро_СохранитьНастройкиВФайл(СтруктураНастройки, "НастройкаОтборовУзла");
	
КонецПроцедуры

Процедура КоманднаяПанельГлавнаяВосстановитьИзФайла(Кнопка)
	
	СтруктураНастроек = _ЛокКонтекст.ЛокЯдро_ПолучитьНастройкиИзФайла("НастройкаОтборовУзла");
	
	Если СтруктураНастроек <> Неопределено Тогда
		_ЛокКонтекст.ЛокЯдро_ЗаполнитьФормуЗначениямиИзСтруктуры(ЭтаФорма, СтруктураНастроек);
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельЗагрузитьНастройкиПоУмолчанию(Кнопка)
	
	Если НастройкиОтборов.Количество() Тогда
		РезультатВопроса = Вопрос("Текущие настройки будут утеряны! Перезаписать их?", РежимДиалогаВопрос.ДаНетОтмена, , , "Внимание");
		
		Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда 			
			Возврат;
		КонецЕсли;	
	КонецЕсли;	
			
	НастройкиОтборовПоУмолчанию = _ЛокКонтекст.ЛокЯдро_ПолучитьНастройкуПоУмолчаниюНаСервереSMARTS("НастройкиОтборовУзлов_" + ТипОбмена, ID_Узла);				
	
	Если НастройкиОтборовПоУмолчанию.Колонки.Найти("ВариантОтбора") = Неопределено Тогда		
		НастройкиОтборовПоУмолчанию.Колонки.Добавить("ВариантОтбора");
		НастройкиОтборовПоУмолчанию.ЗаполнитьЗначения("Только конструктор", "ВариантОтбора");		
	КонецЕсли;	
	
	НастройкиОтборов.Очистить();
	
	Для каждого Строка Из НастройкиОтборовПоУмолчанию Цикл
		ЗаполнитьЗначенияСвойств(НастройкиОтборов.Добавить(), Строка);			
	КонецЦикла; 
		
	НастройкиОтборов.ЗаполнитьЗначения(Истина, "Используется");
	
КонецПроцедуры

#КонецОбласти

#Область ОбщиеМеханизмы

Процедура СохранитьНастройкиОтборов()
	
	ТаблицаДляСохранения = НастройкиОтборов.Скопировать();
	_ЛокКонтекст.ЛокЯдро_СохранитьНастройкуВБазеSMARTS("НастройкиОтборовУзлов_" + ТипОбмена, ТаблицаДляСохранения, ID_Узла);
	Если ID_Узла = _ЛокКонтекст.ДанныеТекущегоУзла.ID_Узла Тогда
		_ЛокКонтекст.ЛокЯдро_ЗаписатьВКэшНастройкуSMARTS("НастройкиОтборовУзлов_" + ТипОбмена, ТаблицаДляСохранения);	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти




