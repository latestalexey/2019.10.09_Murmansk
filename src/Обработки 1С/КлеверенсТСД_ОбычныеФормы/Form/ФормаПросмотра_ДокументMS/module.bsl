
#Область ОбработчикиСобытийФормы

Процедура ПриОткрытии()
	
	ДанныеДокументаMS = _ЛокКонтекст.ЛокЯдро_ПолучитьДанныеДокументаMS(ID_ДокументаMS, ТипДокументаMS,, Истина);
	ДанныеДокументаMS.СтрокиПлан.Колонки.Добавить("КлючСвязиСтроки");
	ДанныеДокументаMS.СтрокиФакт.Колонки.Добавить("КлючСвязиСтроки");
	ДанныеДокументаMS.СтрокиСерии.Колонки.Добавить("КлючСвязиСтроки");
	ДанныеДокументаMS.СтрокиСерийныеНомера.Колонки.Добавить("КлючСвязиСтроки");
	
	СоздатьТаблицуНовыхШтрихкодов();
	
	Заполнить_ШапкуДокумента();
	ЗаполнитьТаблицыДокумента();
	
	ЭлементыФормы.СтраницыПланФакт.Страницы.ГруппаСерии.Видимость = ТаблицаСерии.Количество() > 0;
	ЭлементыФормы.СтраницыПланФакт.Страницы.ГруппаСерийныеНомера.Видимость = ТаблицаСерийныеНомера.Количество() > 0;
	Если СтрокиФакт.Количество() > 0 Тогда
		ЭлементыФормы.СтраницыПланФакт.ТекущаяСтраница = ЭлементыФормы.СтраницыПланФакт.Страницы.ГруппаФакт;
	КонецЕсли;		
	
	СтрокиФакт.ЗаполнитьЗначения(Истина, "Флаг");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФорм

Процедура ПанельФормыПросмотретьШапку(Кнопка)
	
	ПоказатьДанныеДокументаMS("Шапка документаТСД", ДанныеДокументаMS.ШапкаДокумента)	
	
КонецПроцедуры

Процедура ПланПросмотретьНовыеТоварыИШтрихКодыНажатие(Элемент)
	ФормаОткрытия = ПолучитьФорму("ФормаСлужебная_ЗагрузкаНовыхШтрихкодов", ЭтаФорма, ЭтаФорма);
	ФормаОткрытия._ЛокКонтекст = _ЛокКонтекст;
	ФормаОткрытия.ОткрытьМодально();
	
	ОбновитДанныеПослеПривязкиШК();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовФорм

Процедура СтрокиПланВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	ПоказатьДанныеДокументаMS("Строка-План документаТСД", ДанныеДокументаMS.СтрокиПлан.Найти(ВыбраннаяСтрока.КлючСвязиСтроки, "КлючСвязиСтроки"))	
КонецПроцедуры

Процедура СтрокиФактВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	ПоказатьДанныеДокументаMS("Строка-Факт документаТСД", ДанныеДокументаMS.СтрокиФакт.Найти(ВыбраннаяСтрока.КлючСвязиСтроки, "КлючСвязиСтроки"))	
КонецПроцедуры

Процедура СерииВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	ПоказатьДанныеДокументаMS("Строка-Серии документаТСД", ДанныеДокументаMS.СтрокиСерии.Найти(ВыбраннаяСтрока.КлючСвязиСтроки, "КлючСвязиСтроки"))	
КонецПроцедуры

Процедура СерийныеНомераВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	ПоказатьДанныеДокументаMS("Строка-СерийныеНомера документаТСД", ДанныеДокументаMS.СтрокиСерийныеНомера.Найти(ВыбраннаяСтрока.КлючСвязиСтроки, "КлючСвязиСтроки"))	
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеМеханизмы

Процедура ОбновитДанныеПослеПривязкиШК()
	
	Для Каждого СтрокаТЧ Из СтрокиПлан Цикл	
		
		Если СтрокаТЧ.ИдТовара <> "*" И Лев(ВРег(СтрокаТЧ.ИдУпаковки), 3) <> "NEW" Тогда
			Продолжить;	
		КонецЕсли;
		
		ДанныеШК = _ЛокКонтекст.ЛокЯдро_ПолучитьДанныеШтрихКода(СтрокаТЧ.ШК);
		
		Если Не ЗначениеЗаполнено(ДанныеШК) Тогда
			Продолжить;	
		КонецЕсли;
		
		Если ДанныеШК.Свойство("Владелец") Тогда
			СтрокаТЧ.Номенклатура = ДанныеШК.Владелец;
			СтрокаТЧ.ИдТовара = XMLСтрока(ДанныеШК.Владелец.УникальныйИдентификатор());	
		КонецЕсли;
		
		Если ДанныеШК.Свойство("ЕдиницаИзмерения") Тогда
			СтрокаТЧ.ИдУпаковки = ДанныеШК.ЕдиницаИзмерения.Наименование;	
		КонецЕсли;
		
	КонецЦикла;	
	
	Для Каждого СтрокаТЧ Из СтрокиФакт Цикл	
		
		Если СтрокаТЧ.ИдТовара <> "*" И Лев(ВРег(СтрокаТЧ.ИдУпаковки), 3) <> "NEW" Тогда
			Продолжить;	
		КонецЕсли;
		
		ДанныеШК = _ЛокКонтекст.ЛокЯдро_ПолучитьДанныеШтрихКода(СтрокаТЧ.ШК);
		
		Если Не ЗначениеЗаполнено(ДанныеШК) Тогда
			Продолжить;	
		КонецЕсли;
		
		Если ДанныеШК.Свойство("Владелец") Тогда
			СтрокаТЧ.Номенклатура = ДанныеШК.Владелец;
			СтрокаТЧ.ИдТовара = XMLСтрока(ДанныеШК.Владелец.УникальныйИдентификатор());	
		КонецЕсли;
		
		Если ДанныеШК.Свойство("ЕдиницаИзмерения") Тогда
			СтрокаТЧ.ИдУпаковки = ДанныеШК.ЕдиницаИзмерения.Наименование;	
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура Заполнить_ШапкуДокумента()
	
	Для Каждого РеквизитШапки Из ДанныеДокументаMS.ШапкаДокумента Цикл
		Если ЭлементыФормы.Найти(РеквизитШапки.Ключ) <> Неопределено Тогда
			ЭтаФорма[РеквизитШапки.Ключ] = РеквизитШапки.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Если ДанныеДокументаMS.ШапкаДокумента.Завершен Тогда
		Состояние = "Завершен";	
	ИначеЕсли ДанныеДокументаMS.ШапкаДокумента.ВОбработке Тогда
		Состояние = "В работе";
	Иначе
		Состояние = "Выгружен";
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТаблицыДокумента()
	
	МетаданныеНСИ = _ЛокКонтекст.ЛокЯдро_ПолучитьМетаданныеНСИ();
	
	Для Каждого СтрокаДокумента Из ДанныеДокументаMS.СтрокиПлан Цикл
		СтрокаДокумента.КлючСвязиСтроки = Строка(Новый УникальныйИдентификатор());
		ЗаполнитьЗначенияСвойств(СтрокиПлан.Добавить(), СтрокаДокумента);
	КонецЦикла;
	
	Для Каждого СтрокаДокумента Из ДанныеДокументаMS.СтрокиФакт Цикл
		СтрокаДокумента.КлючСвязиСтроки = Строка(Новый УникальныйИдентификатор());
		ЗаполнитьЗначенияСвойств(СтрокиФакт.Добавить(), СтрокаДокумента);
		Если СтрокаДокумента.ИдТовара = "*" ИЛИ Лев(ВРег(СтрокаДокумента.ИдУпаковки), 3) = "NEW" Тогда
			СтрокаШК = ТаблицаНовыхШтрихкодов.Добавить();
			СтрокаШК.Штрихкод = СтрокаДокумента.ШК;
			СтрокаШК.Упаковка = СтрокаДокумента.ИдУпаковки;
			СтрокаШК.ИмяНеизвестного = СтрокаДокумента.ИмяНеизвестного;
			
			Если СтрокаДокумента.ИдТовара <> "*" Тогда
				Попытка
					СтрокаШК.Номенклатура = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(СтрокаДокумента.ИдТовара));
				Исключение
				КонецПопытки;
			КонецЕсли;
			
			Если Лев(ВРег(СтрокаДокумента.ИдУпаковки), 3) = "NEW" И ЗначениеЗаполнено(СтрокаДокумента.ИдЕдиницыИзмерения) Тогда
				Попытка
					СтрокаШК.Упаковка = Справочники[МетаданныеНСИ.ЕдиницыИзмерения.ИмяСправочника].ПолучитьСсылку(Новый УникальныйИдентификатор(СтрокаДокумента.ИдЕдиницыИзмерения));
				Исключение
				КонецПопытки;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаДокумента.ИдХарактеристики) Тогда
				Попытка
					СтрокаШК.Характеристика = Справочники[МетаданныеНСИ.Характеристики.ИмяСправочника].ПолучитьСсылку(Новый УникальныйИдентификатор(СтрокаДокумента.ИдХарактеристики));
				Исключение
				КонецПопытки
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаДокумента Из ДанныеДокументаMS.СтрокиСерии Цикл
		СтрокаДокумента.КлючСвязиСтроки = Строка(Новый УникальныйИдентификатор());
		ЗаполнитьЗначенияСвойств(ТаблицаСерии.Добавить(), СтрокаДокумента);
	КонецЦикла;
	
	Для Каждого СтрокаДокумента Из ДанныеДокументаMS.СтрокиСерийныеНомера Цикл
		СтрокаДокумента.КлючСвязиСтроки = Строка(Новый УникальныйИдентификатор());
		ЗаполнитьЗначенияСвойств(ТаблицаСерийныеНомера.Добавить(), СтрокаДокумента);
	КонецЦикла;

КонецПроцедуры

Процедура ПоказатьДанныеДокументаMS(ДанныеЗаголовка, ДанныеДляПоказа) 
	
	ФормаОткр = ПолучитьФорму("ФормаПросмотра_РазделДокументаMS", ЭтаФорма, ЭтаФорма);		
	ФормаОткр.ДанныеЗаголовка = ДанныеЗаголовка;
	ФормаОткр.ДанныеДляПоказа = ДанныеДляПоказа;
	ФормаОткр.ОткрытьМодально();	
	
КонецПроцедуры

Процедура СоздатьТаблицуНовыхШтрихкодов()
	
	ТаблицаНовыхШтрихкодов.Колонки.Добавить("Штрихкод");
	ТаблицаНовыхШтрихкодов.Колонки.Добавить("Номенклатура");
	ТаблицаНовыхШтрихкодов.Колонки.Добавить("Характеристика");
	ТаблицаНовыхШтрихкодов.Колонки.Добавить("Упаковка");
	ТаблицаНовыхШтрихкодов.Колонки.Добавить("Записывать");
	ТаблицаНовыхШтрихкодов.Колонки.Добавить("ТипШтрихкода");		
	ТаблицаНовыхШтрихкодов.Колонки.Добавить("ИмяНеизвестного");		
	
КонецПроцедуры	

Процедура ПечатьЦенниковНажатие(Элемент)
	Если ЭлементыФормы.СтраницыПланФакт.ТекущаяСтраница = ЭлементыФормы.СтраницыПланФакт.Страницы.ГруппаПлан Тогда
		ДанныеДляПечати = СтрокиПлан;
	ИначеЕсли ЭлементыФормы.СтраницыПланФакт.ТекущаяСтраница = ЭлементыФормы.СтраницыПланФакт.Страницы.ГруппаФакт Тогда
		ДанныеДляПечати = СтрокиФакт;
	Иначе 
		Возврат;
	КонецЕсли;
	_ЛокКонтекст.ПечатьЦенников(ДанныеДляПечати);
КонецПроцедуры

Процедура ВыбратьВсеНажатие(Элемент)
	
	Если ЭлементыФормы.СтраницыПланФакт.ТекущаяСтраница 		= ЭлементыФормы.СтраницыПланФакт.Страницы.ГруппаПлан Тогда
		ТекущаяТаблица = СтрокиПлан;
	ИначеЕсли ЭлементыФормы.СтраницыПланФакт.ТекущаяСтраница 	= ЭлементыФормы.СтраницыПланФакт.Страницы.ГруппаФакт Тогда
		ТекущаяТаблица = СтрокиФакт;
	Иначе 
		Возврат;
	КонецЕсли;
	
	ТекущаяТаблица.ЗаполнитьЗначения(Истина, "Флаг");
	
КонецПроцедуры

Процедура СнятьВсеНажатие(Элемент)

	Если ЭлементыФормы.СтраницыПланФакт.ТекущаяСтраница 		= ЭлементыФормы.СтраницыПланФакт.Страницы.ГруппаПлан Тогда
		ТекущаяТаблица = СтрокиПлан;
	ИначеЕсли ЭлементыФормы.СтраницыПланФакт.ТекущаяСтраница 	= ЭлементыФормы.СтраницыПланФакт.Страницы.ГруппаФакт Тогда
		ТекущаяТаблица = СтрокиФакт;
	Иначе 
		Возврат;
	КонецЕсли;
	
	ТекущаяТаблица.ЗаполнитьЗначения(Ложь, "Флаг");	
	
КонецПроцедуры

#КонецОбласти